package com.newgen.exemption_contractor;

import com.itextpdf.text.Document;
import com.itextpdf.text.pdf.PdfWriter;
import com.newgen.common.ElectricalTemplate;
import java.awt.Color;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

import javax.faces.validator.ValidatorException;

import com.newgen.common.General;
import com.newgen.common.PicklistListenerHandler;
import com.newgen.common.SupervisorTemplate;
import com.newgen.omniforms.FormConfig;
import com.newgen.omniforms.FormReference;
import com.newgen.omniforms.component.ListView;
import com.newgen.omniforms.component.PickList;
import com.newgen.omniforms.context.FormContext;
import com.newgen.omniforms.event.ComponentEvent;
import com.newgen.omniforms.event.FormEvent;
import com.newgen.omniforms.excp.CustomExceptionHandler;
import com.newgen.omniforms.listener.FormListener;
import com.newgen.omniforms.util.OFUtility;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.faces.application.FacesMessage;
import sun.awt.windows.WBufferStrategy;

public class Head implements FormListener {

    //FormReference objFormReference = null; //FormContext.getCurrentInstance().getFormReference();
    FormReference formObject = null;
    FormConfig formConfig = null;
    String activityName = null, file_status = null;
    String engineName = null;
    String asigndfield = null;
    String name_asign = null;
    String sessionId = null;
    String folderId = null;
    String serverUrl = null;
    String processInstanceId = null;
    String workItemId = null;
    String userName = null;
    String processDefId = null;
    String Query = null;
    String Query1 = null;
    List<List<String>> result, temparray, arrayListnew2 ,valid,docarray1= null;
    PickList objPicklist;
    General objGeneral = null;
    String candidate_type = null, value1 = null, value2 = null, value3 = null, value4 = null;
    String lang_select = null, prevs_activity = null, docnameval = null, finaldocs = null, validfinal = null;
    String docid, documentname,form_type = null;
    String file_noforcertificate = null;
    String comment_p1 = "", comboID = null;
    private Object temp;

    /* public Head(FormReference formObject) {
     super();
     System.out.println("In COnstructor");
     this.formObject = formObject;
     } */
    @Override
    public void continueExecution(String arg0, HashMap<String, String> arg1) {
        // TODO Auto-generated method stub
    }

    @Override
    public void eventDispatched(ComponentEvent pEvent) throws ValidatorException {
        // TODO Auto-generated method stub
        System.out.println("Value Change Event :" + pEvent);
        System.out.println("pEvent.getType() :" + pEvent.getType());
        System.out.println("pEvent.getType().name() :" + pEvent.getType().name());
        formObject = FormContext.getCurrentInstance().getFormReference();
        formConfig = FormContext.getCurrentInstance().getFormConfig();
        objGeneral = new General();
        if (pEvent.getType().name().equalsIgnoreCase("VALUE_CHANGED")) {

           
            //code for set name value
            if (pEvent.getSource().getName().equalsIgnoreCase("fullname_a3_b_d_a4_e_f_g_j")) {
                name_asign = formObject.getNGValue("fullname_a3_b_d_a4_e_f_g_j");

                formObject.setNGValue("Text2", name_asign);
                formObject.setNGValue("Text12", name_asign);
                formObject.setNGValue("Text13", name_asign);
                formObject.setNGValue("Text15", name_asign);
            }

            // technical qualification code starts from here
            if (pEvent.getSource().getName().equalsIgnoreCase("technical_qualification")) {
                String tech_qualification = formObject.getNGValue("technical_qualification");
//                 if (lang_select.equalsIgnoreCase("Gujarati")) {
//                    formObject.setNGValue("Label38", "11.2 રાષ્ટ્રીય ઉમેદવારી પ્રમાણપત્ર (એ.ઈ.)");
//                    formObject.setNGValue("Label38", "11.2 રાષ્ટ્રીય ઉમેદવારી પ્રમાણપત્ર (એ.એલ.ઇ.)");
//                    formObject.setNGValue("Label42", "11.4 સત્તા દ્વારા ચકાસાયેલ ફોર્મ આઇ ની કૉપિ");
//                    formObject.setNGValue("Label49", "11.2 ઇલેક્ટ્રીકલ ઇન્સ્ટોલેશન, મકાનમાં વીજળીપ્રવાહના અખંડ માર્ગ");
//                    formObject.setNGValue("Label53", "11.2 બધા સત્ર ગુણ પત્રક");
//                    formObject.setNGValue("Label40", "11.2 ગયા વર્ષની ગુણ પત્રક");
//                    formObject.setNGValue("Label50", "11.3 ડિગ્રી પ્રમાણપત્ર");
//                    formObject.setNGValue("Label54", "11.3 પ્રમાણપત્ર");
//                    formObject.setNGValue("Label39", "11.2 રાષ્ટ્રીય વેપાર પ્રમાણપત્ર (ELE)");
//                    formObject.setNGValue("Label41", "11.5 કે ફોર્મ");
//                    formObject.setNGValue("Label48", "11.3 ડિપ્લોમા પ્રમાણપત્ર");
//                    formObject.setNGValue("Label52", "11.2 ટેકનિકલ પરીક્ષા બોર્ડ પ્રમાણપત્ર");
//                    formObject.setNGValue("Label46", "11.2 ઇલેક્ટ્રિકલ સર્વિસ ટેકનિશિયન પ્રમાણપત્ર");
//                } else if (lang_select.equalsIgnoreCase("English")) {
//                    formObject.setNGValue("Label38", "11.2 National apprenticeship certificate (ELE)");
//                    formObject.setNGValue("Label42", "11.4 Copy of Form “I” verified by authority");
//                    formObject.setNGValue("Label49", "11.2 Electrical installation,wiring and jointing certificate");
//                    formObject.setNGValue("Label53", "11.2 All semester marks sheet");
//                    formObject.setNGValue("Label40", "11.2 Marks sheet of last year");
//                    formObject.setNGValue("Label50", "11.3 Degree certificate");
//                    formObject.setNGValue("Label54", "11.3 Certificate");
//                    formObject.setNGValue("Label39", "11.2 National trade certificate (ELE)");
//                    formObject.setNGValue("Label41", "11.5 Form “K”");
//                    formObject.setNGValue("Label48", "11.3 Diploma certificate");
//                    formObject.setNGValue("Label52", "11.2 Technical examination board certificate");
//                    formObject.setNGValue("Label46", "11.2 Electrical service technician certificate");
//                }
                
                if (candidate_type.equalsIgnoreCase("New Wireman Exemption")) {
                   

                    if (tech_qualification.equalsIgnoreCase("National Apprenticeship Certificate(Electrician)")
                            || tech_qualification.equalsIgnoreCase("National Apprenticeship Certificate(Wireman)")
                            || tech_qualification.equalsIgnoreCase("National Apprenticeship Certificate(Lineman)")) {
                        System.out.println("tech qualification in wireman-----------"+tech_qualification);
                       
                        
                        formObject.setVisible("Label39", false);
                        formObject.setVisible("viewnationaltradecerti", false);
                        formObject.setVisible("validnationaltradecerti", false);

                        formObject.setVisible("Label46", false);
                        formObject.setVisible("viewelectricalservicetechniciancerti", false);
                        formObject.setVisible("validelectricalservicetechniciancerti", false);
                        formObject.setVisible("Label49", false);
                        formObject.setVisible("viewelectricalinstallationwiringjointing", false);
                        formObject.setVisible("validelectricalinstallationwiringjointing", false);
                        formObject.setVisible("Label53", false);
                        formObject.setVisible("viewlastyearmarkssheet", false);
                        formObject.setVisible("validlastyearmarkssheet", false);
                        formObject.setVisible("Label54", false);
                        formObject.setVisible("viewcertificate", false);
                        formObject.setVisible("validcertificate", false);
                        
                        formObject.setVisible("Label38", true);
                        formObject.setVisible("viewnationalapprenticeshipcerti", true);
                        formObject.setVisible("validnationalapprenticeshipcerti", true);

                        formObject.setTop("Frame8", 120);
                        formObject.setHeight("Frame7", 97);
                        formObject.setTop("Frame10", 270);
                        formObject.setTop("Frame11", 380);
                        formObject.setHeight("Frame5", 490);
                        formObject.setTop("Frame15", 1430);
                        formObject.setTop("Frame16", 1510);
                        formObject.setTop("q_execon_comment1", 1640);
                        
                        if (lang_select.equalsIgnoreCase("Gujarati")) {
                            formObject.setNGValue("Label38", "11.2 રાષ્ટ્રીય ઉમેદવારી પ્રમાણપત્ર (એ.ઈ.)");

                        } else if (lang_select.equalsIgnoreCase("English")) {
                            formObject.setNGValue("Label38", "11.2 National apprenticeship certificate (ELE)");

                        }

                    } else if (tech_qualification.equalsIgnoreCase("National Trade Certificate(Electrician)")
                            || tech_qualification.equalsIgnoreCase("National Trade Certificate(Wireman)")
                            || tech_qualification.equalsIgnoreCase("National Trade Certificate(Lineman)")) {
                        formObject.setVisible("Label38", false);
                        formObject.setVisible("viewnationalapprenticeshipcerti", false);
                        formObject.setVisible("validnationalapprenticeshipcerti", false);
                        formObject.setVisible("Label46", false);
                        formObject.setVisible("viewelectricalservicetechniciancerti", false);
                        formObject.setVisible("validelectricalservicetechniciancerti", false);
                        formObject.setVisible("Label49", false);
                        formObject.setVisible("viewelectricalinstallationwiringjointing", false);
                        formObject.setVisible("validelectricalinstallationwiringjointing", false);
                        formObject.setVisible("Label53", false);
                        formObject.setVisible("viewlastyearmarkssheet", false);
                        formObject.setVisible("validlastyearmarkssheet", false);
                        formObject.setVisible("Label54", false);
                        formObject.setVisible("viewcertificate", false);
                        formObject.setVisible("validcertificate", false);

                        formObject.setVisible("Label39", true);
                        formObject.setVisible("viewnationaltradecerti", true);
                        formObject.setVisible("validnationaltradecerti", true);
                        formObject.setTop("Label39", 64);
                        formObject.setTop("viewnationaltradecerti", 64);
                        formObject.setTop("validnationaltradecerti", 64);

                        formObject.setTop("Frame8", 120);
                        System.out.println("after settop---------------");
                        formObject.setHeight("Frame7", 97);
                        formObject.setTop("Frame10", 270);
                        formObject.setTop("Frame11", 380);
                        formObject.setHeight("Frame5", 490);
                        formObject.setTop("Frame15", 1430);
                        formObject.setTop("Frame16", 1510);
                        formObject.setTop("q_execon_comment1", 1640);

                    } else if (tech_qualification.equalsIgnoreCase("Electrical Service Technician")) {

                        formObject.setVisible("Label39", false);
                        formObject.setVisible("viewnationaltradecerti", false);
                        formObject.setVisible("validnationaltradecerti", false);
                        formObject.setVisible("Label38", false);
                        formObject.setVisible("viewnationalapprenticeshipcerti", false);
                        formObject.setVisible("validnationalapprenticeshipcerti", false);
                        formObject.setVisible("Label49", false);
                        formObject.setVisible("viewelectricalinstallationwiringjointing", false);
                        formObject.setVisible("validelectricalinstallationwiringjointing", false);
                        formObject.setVisible("Label53", false);
                        formObject.setVisible("viewlastyearmarkssheet", false);
                        formObject.setVisible("validlastyearmarkssheet", false);
                        formObject.setVisible("Label54", false);
                        formObject.setVisible("viewcertificate", false);
                        formObject.setVisible("validcertificate", false);

                        formObject.setVisible("Label46", true);
                        formObject.setVisible("viewelectricalservicetechniciancerti", true);
                        formObject.setVisible("validelectricalservicetechniciancerti", true);
                        formObject.setTop("Label46", 64);
                        formObject.setTop("viewelectricalservicetechniciancerti", 64);
                        formObject.setTop("validelectricalservicetechniciancerti", 64);
                        formObject.setTop("Frame8", 120);
                        formObject.setHeight("Frame7", 97);
                        formObject.setTop("Frame10", 270);
                        formObject.setTop("Frame11", 380);
                        formObject.setTop("Frame15", 440);
                        formObject.setHeight("Frame5", 490);
                        formObject.setTop("Frame15", 1430);
                        formObject.setTop("Frame16", 1510);
                        formObject.setTop("q_execon_comment1", 1640);

                    } else if (tech_qualification.equalsIgnoreCase("Electrical Installation,Wiring And Jointing From Technical Examination Board")) {

                        formObject.setVisible("Label39", false);
                        formObject.setVisible("viewnationaltradecerti", false);
                        formObject.setVisible("validnationaltradecerti", false);
                        formObject.setVisible("Label38", false);
                        formObject.setVisible("viewnationalapprenticeshipcerti", false);
                        formObject.setVisible("validnationalapprenticeshipcerti", false);
                        formObject.setVisible("Label46", false);
                        formObject.setVisible("viewelectricalservicetechniciancerti", false);
                        formObject.setVisible("validelectricalservicetechniciancerti", false);
                        formObject.setVisible("Label53", false);
                        formObject.setVisible("viewlastyearmarkssheet", false);
                        formObject.setVisible("validlastyearmarkssheet", false);
                        formObject.setVisible("Label54", false);
                        formObject.setVisible("viewcertificate", false);
                        formObject.setVisible("validcertificate", false);

                        formObject.setVisible("Label49", true);
                        formObject.setVisible("viewelectricalinstallationwiringjointing", true);
                        formObject.setVisible("validelectricalinstallationwiringjointing", true);
                        formObject.setTop("Label49", 64);
                        formObject.setTop("viewelectricalinstallationwiringjointing", 64);
                        formObject.setTop("validelectricalinstallationwiringjointing", 64);
                        formObject.setTop("Frame8", 120);
                        formObject.setHeight("Frame7", 97);
                        formObject.setTop("Frame10", 270);
                        formObject.setTop("Frame11", 380);
                        formObject.setTop("Frame15", 440);
                        formObject.setHeight("Frame5", 490);
                        formObject.setTop("Frame15", 1430);
                        formObject.setTop("Frame16", 1510);
                        formObject.setTop("q_execon_comment1", 1640);

                    } else if (tech_qualification.equalsIgnoreCase("Any Other Qualification Equivalent National Trade Or Apprenticeship Certificate")) {
                        formObject.setVisible("Label39", false);
                        formObject.setVisible("viewnationaltradecerti", false);
                        formObject.setVisible("validnationaltradecerti", false);
                        formObject.setVisible("Label38", false);
                        formObject.setVisible("viewnationalapprenticeshipcerti", false);
                        formObject.setVisible("validnationalapprenticeshipcerti", false);
                        formObject.setVisible("Label46", false);
                        formObject.setVisible("viewelectricalservicetechniciancerti", false);
                        formObject.setVisible("validelectricalservicetechniciancerti", false);

                        formObject.setVisible("Label49", false);
                        formObject.setVisible("viewelectricalinstallationwiringjointing", false);
                        formObject.setVisible("validelectricalinstallationwiringjointing", false);

                        formObject.setVisible("Label53", true);
                        formObject.setVisible("viewlastyearmarkssheet", true);
                        formObject.setVisible("validlastyearmarkssheet", true);
                        formObject.setTop("Label53", 64);
                        formObject.setTop("viewlastyearmarkssheet", 64);
                        formObject.setTop("validlastyearmarkssheet", 64);

                        formObject.setVisible("Label54", true);
                        formObject.setVisible("viewcertificate", true);
                        formObject.setVisible("validcertificate", true);
                        formObject.setTop("Label54", 85);
                        formObject.setTop("viewcertificate", 85);
                        formObject.setTop("validcertificate", 85);

                        formObject.setTop("Frame8", 140);
                        formObject.setHeight("Frame7", 120);
                        formObject.setTop("Frame10", 300);
                        formObject.setTop("Frame11", 410);
                        formObject.setHeight("Frame5", 520);      // height set of qualification frame
                        formObject.setTop("Frame15", 1460);// top set of description frame
                        formObject.setTop("Frame16", 1540);
                        formObject.setTop("q_execon_comment1", 1670);
                    }
                }

                // technical qualification dropdown code starts from here
                if (candidate_type.equalsIgnoreCase("New Supervisor Exemption")) {
                    System.out.println("value of candidate aftr selction--------------" + candidate_type);
                    if (tech_qualification.equalsIgnoreCase("Diploma In Electrical Engineering")
                            || tech_qualification.equalsIgnoreCase("Diploma In Electrical & Electronics Engineering")) {

                        formObject.setVisible("Label39", false);
                        formObject.setVisible("viewnationaltradecerti", false);
                        formObject.setVisible("validnationaltradecerti", false);
                        formObject.setVisible("Label41", false);
                        formObject.setVisible("viewformk", false);
                        formObject.setVisible("validformk", false);
                        formObject.setVisible("Label38", false);
                        formObject.setVisible("viewnationalapprenticeshipcerti", false);
                        formObject.setVisible("validnationalapprenticeshipcerti", false);
                        formObject.setVisible("Label42", false);
                        formObject.setVisible("viewformi", false);
                        formObject.setVisible("validformi", false);
                        formObject.setVisible("Label52", false);
                        formObject.setVisible("viewtechnicalexaminationboardcerti", false);
                        formObject.setVisible("validtechnicalexaminationboardcerti", false);
                        formObject.setVisible("Label50", false);
                        formObject.setVisible("viewdegreecertificate", false);
                        formObject.setVisible("validdegreecertificate", false);
                        formObject.setVisible("Label54", false);
                        formObject.setVisible("viewcertificate", false);
                        formObject.setVisible("validcertificate", false);

                        formObject.setVisible("Label40", true);
                        formObject.setVisible("viewlastyearmarkssheet", true);
                        formObject.setVisible("validlastyearmarkssheet", true);
                        formObject.setTop("Label40", 64);
                        formObject.setTop("viewlastyearmarkssheet", 64);
                        formObject.setTop("validlastyearmarkssheet", 64);

                        formObject.setVisible("Label48", true);
                        formObject.setVisible("viewdiplomacertificate", true);
                        formObject.setVisible("validdiplomacertificate", true);
                        formObject.setTop("Label48", 85);
                        formObject.setTop("viewdiplomacertificate", 85);
                        formObject.setTop("validdiplomacertificate", 85);

                        formObject.setTop("Frame8", 140);
                        formObject.setHeight("Frame7", 120);
                        formObject.setTop("Frame10", 280);
                        formObject.setTop("Frame11", 390);
                        formObject.setHeight("Frame5", 520);      // height set of qualification frame
                        formObject.setTop("Frame15", 1440);// top set of description frame
                        formObject.setTop("Frame16", 1520);
                        formObject.setTop("q_execon_comment1", 1650);

                    } else if (tech_qualification.equalsIgnoreCase("Degree In Electrical Engineering")
                            || tech_qualification.equalsIgnoreCase("Degree In Electrical & Electronics Engineering")) {

                        formObject.setVisible("Label42", false);
                        formObject.setVisible("viewformi", false);
                        formObject.setVisible("validformi", false);
                        formObject.setVisible("Label52", false);
                        formObject.setVisible("viewtechnicalexaminationboardcerti", false);
                        formObject.setVisible("validtechnicalexaminationboardcerti", false);
                        formObject.setVisible("Label41", false);
                        formObject.setVisible("viewformk", false);
                        formObject.setVisible("validformk", false);
                        formObject.setVisible("Label38", false);
                        formObject.setVisible("viewnationalapprenticeshipcerti", false);
                        formObject.setVisible("validnationalapprenticeshipcerti", false);
                        formObject.setVisible("Label48", false);
                        formObject.setVisible("viewdiplomacertificate", false);
                        formObject.setVisible("validdiplomacertificate", false);
                        formObject.setVisible("Label39", false);
                        formObject.setVisible("viewnationaltradecerti", false);
                        formObject.setVisible("validnationaltradecerti", false);
                        formObject.setVisible("Label54", false);
                        formObject.setVisible("viewcertificate", false);
                        formObject.setVisible("validcertificate", false);

                        formObject.setVisible("Label40", true);
                        formObject.setVisible("viewlastyearmarkssheet", true);
                        formObject.setVisible("validlastyearmarkssheet", true);
                        formObject.setTop("Label40", 64);
                        formObject.setTop("viewlastyearmarkssheet", 64);
                        formObject.setTop("validlastyearmarkssheet", 64);

                        formObject.setVisible("Label50", true);
                        formObject.setVisible("viewdegreecertificate", true);
                        formObject.setVisible("validdegreecertificate", true);
                        formObject.setTop("Label50", 85);
                        formObject.setTop("viewdegreecertificate", 85);
                        formObject.setTop("validdegreecertificate", 85);

                        formObject.setTop("Frame8", 140);
                        formObject.setHeight("Frame7", 120);
                        formObject.setTop("Frame10", 280);
                        formObject.setTop("Frame11", 390);
                        formObject.setHeight("Frame5", 520);      // height set of qualification frame
                        formObject.setTop("Frame15", 1420);       // top set of description frame
                        formObject.setTop("Frame16", 1520);
                        formObject.setTop("q_execon_comment1", 1650);

                    } else if (tech_qualification.equalsIgnoreCase("Electrician (NCVT)+ National Apprenticeship Certificate In Electrician + 1 Year Practical Experience")) {

                        formObject.setVisible("Label48", false);
                        formObject.setVisible("viewdiplomacertificate", false);
                        formObject.setVisible("validdiplomacertificate", false);
                        formObject.setVisible("Label54", false);
                        formObject.setVisible("viewcertificate", false);
                        formObject.setVisible("validcertificate", false);
                        formObject.setVisible("Label40", false);
                        formObject.setVisible("viewlastyearmarkssheet", false);
                        formObject.setVisible("validlastyearmarkssheet", false);
                        formObject.setVisible("Label50", false);
                        formObject.setVisible("viewdegreecertificate", false);
                        formObject.setVisible("validdegreecertificate", false);
                        formObject.setVisible("Label52", false);
                        formObject.setVisible("viewtechnicalexaminationboardcerti", false);
                        formObject.setVisible("validtechnicalexaminationboardcerti", false);

                        formObject.setVisible("Label39", true);
                        formObject.setVisible("viewnationaltradecerti", true);
                        formObject.setVisible("validnationaltradecerti", true);
                        formObject.setTop("Label39", 64);
                        formObject.setTop("viewnationaltradecerti", 64);
                        formObject.setTop("validnationaltradecerti", 64);

                        formObject.setVisible("Label41", true);
                        formObject.setVisible("viewformk", true);
                        formObject.setVisible("validformk", true);
                        formObject.setTop("Label41", 85);
                        formObject.setTop("viewformk", 85);
                        formObject.setTop("validformk", 85);

                        formObject.setVisible("Label38", true);
                        formObject.setVisible("viewnationalapprenticeshipcerti", true);
                        formObject.setVisible("validnationalapprenticeshipcerti", true);
                        formObject.setTop("Label38", 127);
                        formObject.setTop("viewnationalapprenticeshipcerti", 127);
                        formObject.setTop("validnationalapprenticeshipcerti", 127);

                        formObject.setVisible("Label42", true);
                        formObject.setVisible("viewformi", true);
                        formObject.setVisible("validformi", true);
                        formObject.setTop("Label42", 106);
                        formObject.setTop("viewformi", 106);
                        formObject.setTop("validformi", 106);

                        formObject.setTop("Frame8", 200);
                        formObject.setHeight("Frame7", 180);
                        formObject.setTop("Frame10", 340);
                        formObject.setTop("Frame11", 450);
                        formObject.setTop("Frame15", 510);
                        formObject.setHeight("Frame5", 560);
                        formObject.setTop("Frame15", 1500);
                        formObject.setTop("Frame16", 1580);
                        formObject.setTop("q_execon_comment1", 1710);

                    } else if (tech_qualification.equalsIgnoreCase("Electric Service Technician + 2 Years Practical Experience")) {

                        formObject.setVisible("Label48", false);
                        formObject.setVisible("viewdiplomacertificate", false);
                        formObject.setVisible("validdiplomacertificate", false);
                        formObject.setVisible("Label54", false);
                        formObject.setVisible("viewcertificate", false);
                        formObject.setVisible("validcertificate", false);
                        formObject.setVisible("Label40", false);
                        formObject.setVisible("viewlastyearmarkssheet", false);
                        formObject.setVisible("validlastyearmarkssheet", false);
                        formObject.setVisible("Label50", false);
                        formObject.setVisible("viewdegreecertificate", false);
                        formObject.setVisible("validdegreecertificate", false);
                        formObject.setVisible("Label38", false);
                        formObject.setVisible("viewnationalapprenticeshipcerti", false);
                        formObject.setVisible("validnationalapprenticeshipcerti", false);
                        formObject.setVisible("Label39", false);
                        formObject.setVisible("viewnationaltradecerti", false);
                        formObject.setVisible("validnationaltradecerti", false);

                        formObject.setVisible("Label52", true);
                        formObject.setVisible("viewtechnicalexaminationboardcerti", true);
                        formObject.setVisible("validtechnicalexaminationboardcerti", true);
                        formObject.setTop("Label52", 64);
                        formObject.setTop("viewtechnicalexaminationboardcerti", 64);
                        formObject.setTop("validtechnicalexaminationboardcerti", 64);

                        formObject.setVisible("Label41", true);
                        formObject.setVisible("viewformk", true);
                        formObject.setVisible("validformk", true);
                        formObject.setTop("Label41", 85);
                        formObject.setTop("viewformk", 85);
                        formObject.setTop("validformk", 85);
                        formObject.setVisible("Label42", true);
                        formObject.setVisible("viewformi", true);//missng
                        formObject.setVisible("validformi", true);
                        formObject.setTop("Label42", 106);
                        formObject.setTop("viewformi", 106);
                        formObject.setTop("validformi", 106);

                        formObject.setTop("Frame8", 175);
                        formObject.setHeight("Frame7", 135);
                        formObject.setTop("Frame10", 315);
                        formObject.setTop("Frame11", 425);
                        formObject.setTop("Frame15", 485);
                        formObject.setHeight("Frame5", 535);
                        formObject.setTop("Frame15", 1475);
                        formObject.setTop("Frame16", 1555);
                        formObject.setTop("q_execon_comment1", 1675);

                    } else if (tech_qualification.equalsIgnoreCase("B.E/B.Tech In Electrical Engineering")) {
                        formObject.setVisible("Label48", false);
                        formObject.setVisible("viewdiplomacertificate", false);
                        formObject.setVisible("validdiplomacertificate", false);
                        formObject.setVisible("Label54", false);
                        formObject.setVisible("viewcertificate", false);
                        formObject.setVisible("validcertificate", false);
                        formObject.setVisible("Label40", false);
                        formObject.setVisible("viewlastyearmarkssheet", false);
                        formObject.setVisible("validlastyearmarkssheet", false);
                        formObject.setVisible("Label50", false);
                        formObject.setVisible("viewdegreecertificate", false);
                        formObject.setVisible("validdegreecertificate", false);
                        formObject.setVisible("Label38", false);
                        formObject.setVisible("viewnationalapprenticeshipcerti", false);
                        formObject.setVisible("validnationalapprenticeshipcerti", false);
                        formObject.setVisible("Label39", false);
                        formObject.setVisible("viewnationaltradecerti", false);
                        formObject.setVisible("validnationaltradecerti", false);

                        formObject.setVisible("Label52", false);
                        formObject.setVisible("viewtechnicalexaminationboardcerti", false);
                        formObject.setVisible("validtechnicalexaminationboardcerti", false);
                        formObject.setVisible("Label41", false);
                        formObject.setVisible("viewformk", false);
                        formObject.setVisible("validformk", false);
                        formObject.setVisible("Label42", false);
                        formObject.setVisible("viewformi", false);
                        formObject.setVisible("validformi", false);

                        formObject.setVisible("Label50", true);
                        formObject.setVisible("viewdegreecertificate", true);
                        formObject.setVisible("validdegreecertificate", true);
                        formObject.setTop("Label50", 64);
                        formObject.setTop("viewdegreecertificate", 64);
                        formObject.setTop("validdegreecertificate", 64);

                        formObject.setTop("Frame8", 120);
                        formObject.setHeight("Frame7", 97);
                        formObject.setTop("Frame10", 270);
                        formObject.setTop("Frame11", 380);
                        formObject.setTop("Frame15", 440);
                        formObject.setHeight("Frame5", 490);
                        formObject.setTop("Frame15", 1430);
                        formObject.setTop("Frame16", 1510);
                        formObject.setTop("q_execon_comment1", 1640);

                    } else if (tech_qualification.equalsIgnoreCase("B.E/B.Tech In Electrical & Electronics Engineering")) {
                    } else if (tech_qualification.equalsIgnoreCase("Any Other Qualification Equivalent To Degree/Diploma In Electrical Engineering")) {
                        formObject.setVisible("Label48", false);
                        formObject.setVisible("viewdiplomacertificate", false);
                        formObject.setVisible("validdiplomacertificate", false);

                        formObject.setVisible("Label40", false);
                        formObject.setVisible("viewlastyearmarkssheet", false);
                        formObject.setVisible("validlastyearmarkssheet", false);
                        formObject.setVisible("Label50", false);
                        formObject.setVisible("viewdegreecertificate", false);
                        formObject.setVisible("validdegreecertificate", false);
                        formObject.setVisible("Label38", false);
                        formObject.setVisible("viewnationalapprenticeshipcerti", false);
                        formObject.setVisible("validnationalapprenticeshipcerti", false);
                        formObject.setVisible("Label39", false);
                        formObject.setVisible("viewnationaltradecerti", false);
                        formObject.setVisible("validnationaltradecerti", false);

                        formObject.setVisible("Label52", false);
                        formObject.setVisible("viewtechnicalexaminationboardcerti", false);
                        formObject.setVisible("validtechnicalexaminationboardcerti", false);
                        formObject.setVisible("Label41", false);
                        formObject.setVisible("viewformk", false);
                        formObject.setVisible("validformk", false);
                        formObject.setVisible("Label42", false);
                        formObject.setVisible("viewformi", false);
                        formObject.setVisible("validformi", false);

                        formObject.setVisible("Label50", false);
                        formObject.setVisible("viewdegreecertificate", false);
                        formObject.setVisible("validdegreecertificate", false);

                        formObject.setVisible("Label54", true);
                        formObject.setVisible("viewcertificate", true);
                        formObject.setVisible("validcertificate", true);
                        formObject.setTop("Label54", 64);
                        formObject.setTop("viewcertificate", 64);
                        formObject.setTop("validcertificate", 64);

                        formObject.setTop("Frame8", 120);
                        formObject.setHeight("Frame7", 97);
                        formObject.setTop("Frame10", 270);
                        formObject.setTop("Frame11", 380);
                        formObject.setTop("Frame15", 440);
                        formObject.setHeight("Frame5", 490);
                        formObject.setTop("Frame15", 1430);
                        formObject.setTop("Frame16", 1510);
                        formObject.setTop("q_execon_comment1", 1640);
                    }
                }
            }

            //code for organisation value change starts from here
            if (pEvent.getSource().getName().equalsIgnoreCase("org_type")) {
                String org_type = formObject.getNGValue("org_type");
                //change in gujarati 
                if (lang_select.equalsIgnoreCase("Gujarati")) {
                    formObject.setNGValue("Label102", "4.1 ભાગીદારી ખત");
                    formObject.setNGValue("Label60", "4.1 નોંધણી પ્રમાણપત્ર");
                    formObject.setNGValue("Label62", "4.1 મેમોરેન્ડમ");
                } else if (lang_select.equalsIgnoreCase("English")) {
                    formObject.setNGValue("Label102", "4.1 Partnership deed");
                    formObject.setNGValue("Label60", "4.1 Registration certificate");
                    formObject.setNGValue("Label62", "4.1 Memorandum");
                }


                if (org_type.equalsIgnoreCase("Partnership")) {
                    formObject.setVisible("Label60", false);
                    formObject.setVisible("viewregistrationcertificate", false);
                    formObject.setVisible("validregistrationcertificate", false);
                    formObject.setVisible("Label62", false);
                    formObject.setVisible("viewmemorandum", false);
                    formObject.setVisible("validmemorandum", false);

                    formObject.setVisible("Label102", true);
                    formObject.setVisible("viewpartnershipdeed", true);
                    formObject.setVisible("validpartnershipdeed", true);

                }
                if (org_type.equalsIgnoreCase("LLP")) {
                    formObject.setVisible("Label102", false);
                    formObject.setVisible("viewpartnershipdeed", false);
                    formObject.setVisible("validpartnershipdeed", false);
                    formObject.setVisible("Label62", false);
                    formObject.setVisible("viewmemorandum", false);
                    formObject.setVisible("validmemorandum", false);

                    formObject.setVisible("Label60", true);
                    formObject.setVisible("viewregistrationcertificate", true);
                    formObject.setVisible("validregistrationcertificate", true);
                    formObject.setTop("Label60", 408);
                    formObject.setTop("viewregistrationcertificate", 408);
                    formObject.setTop("validregistrationcertificate", 408);
                }
                if (org_type.equalsIgnoreCase("Private") || org_type.equalsIgnoreCase("Public")) {
                    formObject.setVisible("Label102", false);
                    formObject.setVisible("viewpartnershipdeed", false);
                    formObject.setVisible("validpartnershipdeed", false);
                    formObject.setVisible("Label60", false);
                    formObject.setVisible("viewregistrationcertificate", false);
                    formObject.setVisible("validregistrationcertificate", false);

                    formObject.setVisible("Label62", true);
                    formObject.setVisible("viewmemorandum", true);
                    formObject.setVisible("validmemorandum", true);
                    formObject.setTop("Label62", 408);
                    formObject.setTop("viewmemorandum", 408);
                    formObject.setTop("validmemorandum", 408);
                }
            }

            //code for enable or disable tab 

            if (pEvent.getSource().getName().equalsIgnoreCase("candidate_type")) {

                candidate_type = formObject.getNGValue("candidate_type");
                System.out.println("coming up to here ----- >" + candidate_type);

                if (candidate_type.equalsIgnoreCase("New Supervisor Exemption")) {

                    formObject.setSheetVisible("Tab1", 0, true);
                    formObject.setSheetVisible("Tab1", 1, false);
                    formObject.setSheetVisible("Tab1", 3, false);
                    formObject.setSheetVisible("Tab1", 2, false);

                    // code for process label setting
                    formObject.setNGValue("Label144", "Application for New Supervisor Exemption");

                   // setTechnicalQualification(candidate_type);
                }

                if (candidate_type.equalsIgnoreCase("New Wireman Exemption")) {

                    formObject.setSheetVisible("Tab1", 0, true);
                    formObject.setSheetVisible("Tab1", 1, false);
                    formObject.setSheetVisible("Tab1", 3, false);
                    formObject.setSheetVisible("Tab1", 2, false);

                    formObject.setNGValue("Label144", "Application for New Wireman Exemption");

                   // setTechnicalQualification(candidate_type);
                }

                if (candidate_type.equalsIgnoreCase("New Contractor License")) {

                    formObject.setSheetVisible("Tab1", 0, false);
                    formObject.setSheetVisible("Tab1", 1, true);
                    formObject.setSheetVisible("Tab1", 3, false);
                    formObject.setSheetVisible("Tab1", 2, false);
                    formObject.setHeight("Tab1_1", 10);
                   
                   
                    formObject.setNGValue("Label144", "Application for New Contractor License");

                }
                if (candidate_type.equalsIgnoreCase("Contractor Renewal")) {

                    formObject.setSheetVisible("Tab1", 0, false);
                    formObject.setSheetVisible("Tab1", 1, false);
                    formObject.setSheetVisible("Tab1", 2, false);
                    formObject.setSheetVisible("Tab1", 3, true);

                    formObject.setNGValue("Label144", "Application for Contractor Renewal");

                }
                if (candidate_type.equalsIgnoreCase("Duplicate")) {

                    formObject.setSheetVisible("Tab1", 0, false);
                    formObject.setSheetVisible("Tab1", 1, false);
                    formObject.setSheetVisible("Tab1", 3, false);
                    formObject.setSheetVisible("Tab1", 2, true);
                    formObject.setNGValue("Label144", "Application for Duplicate");

                }
            }

            //code for language selection
            if (pEvent.getSource().getName().equalsIgnoreCase("Combo3")) {
                lang_select = formObject.getNGValue("Combo3");
                if (lang_select.equalsIgnoreCase("English")) {

                    formObject.setNGValue("Label102", "4.1 Partnership deed");
                    formObject.setNGValue("Label60", "4.1 Registration certificate");
                    formObject.setNGValue("Label62", "4.1 Memorandum");

                    //technical qualification
                    formObject.setNGValue("Label38", "11.2 National apprenticeship certificate (ELE)");
                    formObject.setNGValue("Label42", "11.4 Copy of Form “I” verified by authority");
                    formObject.setNGValue("Label49", "11.2 Electrical installation,wiring and jointing certificate");
                    formObject.setNGValue("Label53", "11.2 All semester marks sheet");
                    formObject.setNGValue("Label40", "11.2 Marks sheet of last year");
                    formObject.setNGValue("Label50", "11.3 Degree certificate");
                    formObject.setNGValue("Label54", "11.3 Certificate");
                    formObject.setNGValue("Label39", "11.2 National trade certificate (ELE)");
                    formObject.setNGValue("Label41", "11.5 Form “K”");
                    formObject.setNGValue("Label48", "11.3 Diploma certificate");
                    formObject.setNGValue("Label52", "11.2 Technical examination board certificate");
                    formObject.setNGValue("Label46", "11.2 Electrical service technician certificate");

                    // Label Start From Here
                    formObject.setNGValue("Label4", "1. Surname");
                    formObject.setNGValue("Label5", "2. First name");
                    formObject.setNGValue("Label6", "3. Father / Husband or Middle nam");
                    formObject.setNGValue("Label10", "4. Date of birth");
                    formObject.setNGValue("Label7", "4.1 School leaving certificate");
                    formObject.setNGValue("Label11", "4.2. Age");
                    formObject.setNGValue("Label13", "5. Gender");
                    formObject.setNGValue("Label14", "6.1 House no /Flat no /Block no");
                    formObject.setNGValue("Label15", "6.2 Building / Apartment name");
                    formObject.setNGValue("Label16", "6.3 Taluka name");
                    formObject.setNGValue("Label17", "6.4 District name");
                    formObject.setNGValue("Label22", "6.5 State");
                    formObject.setNGValue("Label23", "6.6 Pincode");
                    formObject.setNGValue("Label24", "6.7 Attach electricity bill for address proof or any Govt. Id");
                    formObject.setNGValue("Label26", "7.1 House no /Flat no /Block no");
                    formObject.setNGValue("Label27", "7.2 Building / Apartment name");
                    formObject.setNGValue("Label28", "7.3 Taluka name");
                    formObject.setNGValue("Label29", "7.4 District name");
                    formObject.setNGValue("Label30", "7.5 State");
                    formObject.setNGValue("Label31", "7.6 Pincode");
                    formObject.setNGValue("Label32", "7.7 Attach electricity bill for address proof or any Govt. Id");
                    formObject.setNGValue("Label35", "8. Mobile no");
                    formObject.setNGValue("Label36", "9. Alternate Mobile no");
                    formObject.setNGValue("Label37", "10. Email id of applicant");
                    formObject.setNGValue("Label8", "11. Technical Qualification");
                    formObject.setNGValue("Label33", "11.1 Enrolment no");
                    formObject.setNGValue("Label56", "12. Name Of University");
                    formObject.setNGValue("Label57", "12.1 Year Of Passing");
                    formObject.setNGValue("Label58", "12.2 State");
                    formObject.setNGValue("Label59", "12.3 Affidavit if not from Gujarat");
                    formObject.setNGValue("Label61", "12.4 Permanent address proof of the state from which you belong if not from Gujarat");
                    formObject.setNGValue("Label63", "13. Name Of The Institute & College");
                    formObject.setNGValue("Label64", "13.1 Name Of District Of College");
                    formObject.setNGValue("Label65", "13.2 Marks sheet of all sem if from Other state");
                    formObject.setNGValue("Label67", "14. Upload Photograph");
                    formObject.setNGValue("Label68", "15. Upload Signature");
                    formObject.setNGValue("Label69", "14.1 Passport size photograph");
                    formObject.setNGValue("Label71", "15.1 Scan copy of signature");
                    formObject.setNGValue("Label12", "Declaration for exemption for electrical wireman permit in Gujarat");
                    formObject.setNGValue("Label47", "I hereby declare that i have not holding any wireman permit issued by Gujarat state or any other");
                    formObject.setNGValue("Label51", "I myself is liable for prosecution for false information.");
                    formObject.setNGValue("Label55", "Comment");
                    formObject.setNGValue("field", "Field name");
                    formObject.setNGValue("Label72", "Added by");
                    formObject.setNGValue("Label70", "Added on");

                    //contractor label starts from here
                    formObject.setNGValue("Label90", "1. Name in which Electrical Contractor License applied");
                    formObject.setNGValue("Label92", "2. Mobile No. of the applicant");
                    formObject.setNGValue("Label93", "3.1 Office no / Block no");
                    formObject.setNGValue("Label94", "3.2 Building / Apartment name");
                    formObject.setNGValue("Label95", "3.3 Taluka name");
                    formObject.setNGValue("Label96", "3.4 District name");
                    formObject.setNGValue("Label97", "3.5 State");
                    formObject.setNGValue("Label98", "3.6 Pincode");
                    formObject.setNGValue("Label99", "3.7 Attach electricity bill for address proof or any Govt. Id");
                    formObject.setNGValue("Label101", "4. Type Of Organization");
                    formObject.setNGValue("Label111", "5.  Details Of Organization for(Partnership/Propritership)");
                    formObject.setNGValue("Label138", "Name of Partner");
                    formObject.setNGValue("Label139", "Date of Birth");
                    formObject.setNGValue("Label141", "5.1 Date of birth proof ");
                    formObject.setNGValue("Label143", "5.2 Address proof");
                    formObject.setNGValue("Label140", "Home Address");
                    formObject.setNGValue("Label105", "6. Is Contractor License Previously Granted");
                    formObject.setNGValue("Label106", "6.1 Contractor License Number");
                    formObject.setNGValue("Label107", "6.2 Date Of Issue (contractor license)");
                    formObject.setNGValue("Label108", "7.1 Name Of Supervisor");
                    formObject.setNGValue("Label109", "7.2 Permit No. Supervisor");
                    formObject.setNGValue("Label110", "7.3 Date of issue Of Supervisor Permit");
                    formObject.setNGValue("Label73", "7.4 Date of birth of supervisor");
                    formObject.setNGValue("Label74", "7.5 Age");
                    formObject.setNGValue("Label112", "8. Previous Experience Of Supervisor With Any Other Licensed Contractor");
                    formObject.setNGValue("Label134", "Name of contarctor");
                    formObject.setNGValue("Label135", "Contractor License No");
                    formObject.setNGValue("Label137", "Date of starting");
                    formObject.setNGValue("Label136", "Date of leaving");
                    formObject.setNGValue("Label147", "8.1 Address proof ");
                    formObject.setNGValue("Label113", "9. Attach Documents Regarding Contractor License ");
                    formObject.setNGValue("Label114", "9.1 Bank solvency certificate");
                    formObject.setNGValue("Label116", "9.2  Details of instruments");
                    formObject.setNGValue("Label119", "9.3 Invoice of instruments");
                    formObject.setNGValue("Label121", "9.4 Owners Declaration");
                    formObject.setNGValue("Label123", "9.5 Declaration Of Supervisor");
                    formObject.setNGValue("Label125", "9.6 Appointment Letter to be given ");
                    formObject.setNGValue("Label127", "9.7 Letter of declaration");
                    formObject.setNGValue("Label133", "9.8 Affidavit");
                    formObject.setNGValue("Label34", "Comment");
                    formObject.setNGValue("Label43", "Field Name");
                    formObject.setNGValue("Label45", "Added by");
                    formObject.setNGValue("Label19", "Added on");


                    //label of duplicate starts from here
                    formObject.setNGValue("Label75", "1. Name of Applicant");
                    formObject.setNGValue("Label76", "2. Applying for supervisor / wireman permit or exemption certificate");
                    formObject.setNGValue("Label77", "3. Wireman Or Supervisor Permit No.");
                    formObject.setNGValue("Label78", "4. Date Of Issue Of Permit");
                    formObject.setNGValue("Label79", "5. Attach Document");
                    formObject.setNGValue("Label80", "5.1 Attach Photocopy of Permit");
                    formObject.setNGValue("Label82", "6. Is there any change in address ?");
                    formObject.setNGValue("Label83", "6.1 House No. / Flat No. / Block No");
                    formObject.setNGValue("Label84", "6.2 Building Name / Apartment Name");
                    formObject.setNGValue("Label85", "6.3 Taluka Name");
                    formObject.setNGValue("Label87", "6.4 District Name");
                    formObject.setNGValue("Label86", "6.5 State");
                    formObject.setNGValue("Label88", "6.6 Pincode");
                    formObject.setNGValue("Label89", "6.7 Attach electricity bill for address proof or any Govt. valid ID proof");
                    formObject.setNGValue("Label100", "7. Attach Document");
                    formObject.setNGValue("Label103", "7.1 Passport size Photograph");
                    formObject.setNGValue("Label115", "7.2 Affidavit");


                    //label of renewal starts from here
                    formObject.setNGValue("Label118", "1. Name of contractor");
                    formObject.setNGValue("Label120", "2. Contractor license no");
                    formObject.setNGValue("Label122", "3. Date of issue of license");
                    formObject.setNGValue("Label124", "4. Expiry date of license");
                    formObject.setNGValue("Label126", "5. Attach Document");
                    formObject.setNGValue("Label128", "Copy of Form “I” verified by authority (All Pages)");
                    formObject.setNGValue("Label130", "6.1 Name of supervisor");
                    formObject.setNGValue("Label131", "6.2 Date of birth of supervisor");
                    formObject.setNGValue("Label132", "6.3 Date of joining");
                    formObject.setNGValue("Label142", "7. Is the above mentioned supervisor still working with the firm ?");
                    formObject.setNGValue("Label145", "7.1 Date of leaving of old supervisor");
                    formObject.setNGValue("Label146", "7.1 Name of supervisor");
                    formObject.setNGValue("Label148", "7.2 Date of birth of supervisor");
                    formObject.setNGValue("Label149", "7.3 Date of joining");
                    formObject.setNGValue("Label150", "8. Is there any change in address ?");
                    formObject.setNGValue("Label151", "8.1 House No. / Flat No. / Block No");
                    formObject.setNGValue("Label152", "8.2 Building Name / Apartment Name");
                    formObject.setNGValue("Label153", "8.3 Taluka Name");
                    formObject.setNGValue("Label154", "8.4 District Name");
                    formObject.setNGValue("Label155", "8.5 State");
                    formObject.setNGValue("Label156", "8.6 Pincode");
                    formObject.setNGValue("Label157", "8.7 Attach electricty bill for address pfroof or any Govt. valid ID proof");

                }
                //Gujarati label starts from here

                if (lang_select.equalsIgnoreCase("Gujarati")) {

                    //org_type label
                    formObject.setNGValue("Label102", "4.1 ભાગીદારી ખત");
                    formObject.setNGValue("Label60", "4.1 નોંધણી પ્રમાણપત્ર");
                    formObject.setNGValue("Label62", "4.1 મેમોરેન્ડમ");

                    //technical qualification label
                    formObject.setNGValue("Label38", "11.2 રાષ્ટ્રીય ઉમેદવારી પ્રમાણપત્ર (એ.ઈ.)");
                    formObject.setNGValue("Label38", "11.2 રાષ્ટ્રીય ઉમેદવારી પ્રમાણપત્ર (એ.એલ.ઇ.)");
                    formObject.setNGValue("Label42", "11.4 સત્તા દ્વારા ચકાસાયેલ ફોર્મ આઇ ની કૉપિ");
                    formObject.setNGValue("Label49", "11.2 ઇલેક્ટ્રીકલ ઇન્સ્ટોલેશન, મકાનમાં વીજળીપ્રવાહના અખંડ માર્ગ");
                    formObject.setNGValue("Label53", "11.2 બધા સત્ર ગુણ પત્રક");
                    formObject.setNGValue("Label40", "11.2 ગયા વર્ષની ગુણ પત્રક");
                    formObject.setNGValue("Label50", "11.3 ડિગ્રી પ્રમાણપત્ર");
                    formObject.setNGValue("Label54", "11.3 પ્રમાણપત્ર");
                    formObject.setNGValue("Label39", "11.2 રાષ્ટ્રીય વેપાર પ્રમાણપત્ર (ELE)");
                    formObject.setNGValue("Label41", "11.5 કે ફોર્મ");
                    formObject.setNGValue("Label48", "11.3 ડિપ્લોમા પ્રમાણપત્ર");
                    formObject.setNGValue("Label52", "11.2 ટેકનિકલ પરીક્ષા બોર્ડ પ્રમાણપત્ર");
                    formObject.setNGValue("Label46", "11.2 ઇલેક્ટ્રિકલ સર્વિસ ટેકનિશિયન પ્રમાણપત્ર");

                    //supervisor/wireman label
                    formObject.setNGValue("Label4", "1. સ્નામ");
                    formObject.setNGValue("Label5", "2. પ્રથમ નામ");
                    formObject.setNGValue("Label6", "3. પિતા / પતિ અથવા મધ્ય નામ");
                    formObject.setNGValue("Label10", "4. જન્મ તારીખ");
                    formObject.setNGValue("Label7", "4.1 શાળા છોડયાં નું પ્રમાણપત્ર");
                    formObject.setNGValue("Label11", "4.2. ઉંમર");
                    formObject.setNGValue("Label13", "5. જાતિ");
                    formObject.setNGValue("Label14", "6.1 ગૃહ નં. / ફ્લેટ નંબર / બ્લોક નં");
                    formObject.setNGValue("Label15", "6.2 બિલ્ડિંગ નામ / એપાર્ટમેન્ટ નામ");
                    formObject.setNGValue("Label16", "6.3 તાલુકાનું નામ");
                    formObject.setNGValue("Label17", "6.4 જિલ્લાનું નામ");
                    formObject.setNGValue("Label22", "6.5 રાજ્ય");
                    formObject.setNGValue("Label23", "6.6 પીન કોડ");
                    formObject.setNGValue("Label24", "6.7 સરનામાના પુરાવા માટે વીજળી બિલ અથવાકોઈપણ સરકાર માન્ય ID ની સાબિતી જોડો");
                    formObject.setNGValue("Label26", "7.1 ગૃહ નં. / ફ્લેટ નંબર / બ્લોક નં");
                    formObject.setNGValue("Label27", "7.2 બિલ્ડિંગ નામ / એપાર્ટમેન્ટ નામ");
                    formObject.setNGValue("Label28", "7.3 તાલુકાનું નામ");
                    formObject.setNGValue("Label29", "7.4 જિલ્લાનું નામ");
                    formObject.setNGValue("Label30", "7.5 રાજ્ય");
                    formObject.setNGValue("Label31", "7.6 પીન કોડ");
                    formObject.setNGValue("Label32", "7.7 સરનામાના પુરાવા માટે વીજળી બિલ અથવાકોઈપણ સરકાર માન્ય ID ની સાબિતી જોડો");
                    formObject.setNGValue("Label35", "8. મોબાઇલ નંબર");
                    formObject.setNGValue("Label36", "9. વૈકલ્પિક મોબાઇલ નંબર");
                    formObject.setNGValue("Label37", "10. અરજદારનું ઇમેઇલ આઈડી");
                    formObject.setNGValue("Label8", "11. તકનિકી લાયકાત");
                    formObject.setNGValue("Label33", "11.1 નોંધણી નંબર");
                    formObject.setNGValue("Label56", "12. યુનિવર્સિટીનું નામ");
                    formObject.setNGValue("Label57", "12.1 પાસિંગનું વર્ષ");
                    formObject.setNGValue("Label58", "12.2 રાજ્ય");
                    formObject.setNGValue("Label59", "12.3 જો ગુજરાતથી ના હોય તો એફિડેવિટ જોડો");
                    formObject.setNGValue("Label61", "12.4 જે રાજ્યનો તમે ગુજરાતથી ન હોવો તેનું કાયમી સરનામું પુરાવો");
                    formObject.setNGValue("Label63", "13. સંસ્થા અને કોલેજનું નામ");
                    formObject.setNGValue("Label64", "13.1 કોલેજ જિલ્લાનું નામ");
                    formObject.setNGValue("Label65", "13.2 અન્ય રાજ્યથી જો બધા સત્રના ગુણ પત્રક");
                    formObject.setNGValue("Label67", "14. ફોટો અપલોડ કરો");
                    formObject.setNGValue("Label68", "15. હસ્તાક્ષર અપલોડ કરો");
                    formObject.setNGValue("Label69", "14.1 પાસપોર્ટ સાઈઝ નો ફોટોગ્રાફ");
                    formObject.setNGValue("Label71", "15.1 સહીની સ્કેન નકલ જોડો");
                    formObject.setNGValue("Label12", "ગુજરાતમાં વિદ્યુત વાયરમેન પરમિટ માટે મુક્તિ માટેની ઘોષણા");
                    formObject.setNGValue("Label47", "હું આ મુજબ જાહેર કરું છું કે મારી પાસે ગુજરાત રાજ્ય અથવા અન્ય કોઇ દ્વારા આપવામાં આવેલા કોઈપણ વાયરમેન પરમિટ નથી");
                    formObject.setNGValue("Label51", "ખોટી માહિતી માટે હું પોતે કાર્યવાહી માટે જવાબદાર છું.");
                    formObject.setNGValue("Label55", "ટિપ્પણી કરો");
                    formObject.setNGValue("field", "ફીલ્ડનું નામ");
                    formObject.setNGValue("Label72", "દ્વારા ઉમેરાઈ");
                    formObject.setNGValue("Label70", "પર ઉમેર્યું");


                    //contractor gujarati label

                    formObject.setNGValue("Label90", "1. જેના માટે ઇલેક્ટ્રિકલ કોન્ટ્રાક્ટર લાઈસન્સ લાગુ થાય છે તેનું નામ");
                    formObject.setNGValue("Label92", "2. અરજદારનો મોબાઇલ નંબર ");
                    formObject.setNGValue("Label93", "3.1 ઓફિસ નંબર / બ્લોક નં");
                    formObject.setNGValue("Label94", "3.2 બિલ્ડિંગ નામ / એપાર્ટમેન્ટ નામ");
                    formObject.setNGValue("Label95", "3.3 તાલુકાનું નામ");
                    formObject.setNGValue("Label96", "3.4 જિલ્લાનું નામ");
                    formObject.setNGValue("Label97", "3.5 રાજ્ય");
                    formObject.setNGValue("Label98", "3.6 પીન કોડ");
                    formObject.setNGValue("Label99", "3.7 સરનામાના પુરાવા માટે વીજળી બિલ અથવાકોઈપણ સરકાર માન્ય ID ની સાબિતી જોડો");
                    formObject.setNGValue("Label101", "4. સંસ્થાના પ્રકાર");
                    formObject.setNGValue("Label111", "5.  સંગઠનની વિગતો (ભાગીદારી / પ્રસ્તાવના)");
                    formObject.setNGValue("Label138", "પાર્ટનરનું નામ");
                    formObject.setNGValue("Label139", "જન્મ તારીખ");
                    formObject.setNGValue("Label141", "5.1 જન્મતારીખ ની સાબિતી");
                    formObject.setNGValue("Label143", "5.2 સરનામું ની સાબિતી");
                    formObject.setNGValue("Label140", "ઘરનું સરનામું");
                    formObject.setNGValue("Label105", "6. શું કોન્ટ્રાક્ટર લાઇસન્સ પહેલાં મંજૂર થયેલ છે?");
                    formObject.setNGValue("Label106", "6.1 કોન્ટ્રાક્ટર લાઈસન્સ નંબર");
                    formObject.setNGValue("Label107", "6.2 કોન્ટ્રાક્ટર લાઈસન્સ કાઢી આપવાની તારીખ");
                    formObject.setNGValue("Label108", "7.1 સુપરવાઇઝરનું નામ");
                    formObject.setNGValue("Label109", "7.2 પરમિટ નં. સુપરવાઇઝર");
                    formObject.setNGValue("Label110", "7.3 સુપરવાઇઝર પરમિટના મુદ્દાની તારીખ");
                    formObject.setNGValue("Label73", "7.4 સુપરવાઇઝરના જન્મ તારીખ");
                    formObject.setNGValue("Label74", "7.5 ઉંમર");

                    formObject.setNGValue("Label112", "8. અગાઉના કોઈપણ અન્ય કોઇ લાઇસન્સ ધરાવતી ઠેકેદાર સાથે સુપરવાઇઝરનો અનુભવ");
                    formObject.setNGValue("Label134", "કોન્ટ્રેક્ટર નું નામ");
                    formObject.setNGValue("Label135", "કોન્ટ્રેક્ટર નો લાઈસન્સ નંબર");
                    formObject.setNGValue("Label137", "શરૂઆતની તારીખ");
                    formObject.setNGValue("Label136", "છોડવાની તારીખ");
                    formObject.setNGValue("Label147", "8.1 સરનામું સાબિતી ");
                    formObject.setNGValue("Label113", "9. કોન્ટ્રાક્ટર લાયસન્સ સંબંધિત દસ્તાવેજો જોડો");
                    formObject.setNGValue("Label114", "9.1 બેન્ક સૉલ્વેન્સી સર્ટિફિકેટ");
                    formObject.setNGValue("Label116", "9.2  સાધનોની વિગતો");
                    formObject.setNGValue("Label119", "9.3 સાધનોની ઇન્વોઇસ");
                    formObject.setNGValue("Label121", "9.4 માલિક નું ડિકલેરેશન");
                    formObject.setNGValue("Label123", "9.5 સુપરવાઇઝર નું ડિકલેરેશન");
                    formObject.setNGValue("Label125", "9.6 નિમણૂંક પત્ર આપવામાં આવશે");
                    formObject.setNGValue("Label127", "9.7 ઘોષણા પત્ર");
                    formObject.setNGValue("Label133", "9.8 સોગંદનામું");
                    formObject.setNGValue("Label34", "ટિપ્પણી કરો");
                    formObject.setNGValue("Label43", "ફીલ્ડનું નામ");
                    formObject.setNGValue("Label45", "દ્વારા ઉમેરાઈ");
                    formObject.setNGValue("Label9", "પર ઉમેર્યું");




                    // gujarati label of duplicate starts from here
                    formObject.setNGValue("Label75", "1. અરજદારનું નામ");
                    formObject.setNGValue("Label76", "2. સુપરવાઇઝર / વાયરમેન પરમિટ અથવા મુક્તિ પ્રમાણપત્ર માટે અરજી કરવી");
                    formObject.setNGValue("Label77", "3. વાયરમેન અથવા સુપરવાઇઝર પરમિટ નં.");
                    formObject.setNGValue("Label78", "4. પરમિટ(પરવાનગી) કાઢી આપવાની તારીખ");
                    formObject.setNGValue("Label79", "5. દસ્તાવેજ જોડો");
                    formObject.setNGValue("Label80", "5.1 પરમિટની ફોટોકોપી જોડો");
                    formObject.setNGValue("Label82", "6. સરનામામાં કોઈ ફેરફાર છે?");
                    formObject.setNGValue("Label83", "6.1 ગૃહ નં. / ફ્લેટ નંબર / બ્લોક નં.");
                    formObject.setNGValue("Label84", "6.2 બિલ્ડિંગ નામ / એપાર્ટમેન્ટ નામ");
                    formObject.setNGValue("Label85", "6.3 તાલુકા નામ");
                    formObject.setNGValue("Label87", "6.4 જિલ્લાનું નામ");
                    formObject.setNGValue("Label86", "6.5 રાજ્ય");
                    formObject.setNGValue("Label88", "6.6 પીન કોડ");
                    formObject.setNGValue("Label89", "6.7 સરનામાના પુરાવા માટે વીજળી બિલ અથવાકોઈપણ સરકાર માન્ય ID ની સાબિતી જોડો");
                    formObject.setNGValue("Label100", "7. દસ્તાવેજ જોડો");
                    formObject.setNGValue("Label103", "7.1 પાસપોર્ટ સાઈઝ નો ફોટોગ્રાફ");
                    formObject.setNGValue("Label115", "7.2 એફિડેવિટ");

                    //label of renewal starts from here
                    formObject.setNGValue("Label118", "1. કોન્ટ્રાક્ટર નું નામ");
                    formObject.setNGValue("Label120", "2. કોન્ટ્રાક્ટર નું લાઇસન્સ નંબર");
                    formObject.setNGValue("Label122", "3. લાઇસન્સ કાઢી આપવાની તારીખ");
                    formObject.setNGValue("Label124", "4. લાઈસન્સની સમાપ્તિ તારીખ");
                    formObject.setNGValue("Label126", "5. દસ્તાવેજ જોડો");
                    formObject.setNGValue("Label128", "ઇલેક્ટ્રિકલ ઇન્સ્પેક્ટર અથવા તેના પ્રતિનિધિ દ્વારા ચકાસવામાં આવેલ ફોર્મ I(બધા પાના) ની નકલ");
                    formObject.setNGValue("Label130", "6.1 સુપરવાઇઝરનું નામ");
                    formObject.setNGValue("Label131", "6.2 સુપરવાઈઝર ની જન્મ તારીખ");
                    formObject.setNGValue("Label132", "6.3 જોડાયા ની તારીખ");
                    formObject.setNGValue("Label142", "7. ઉપરોક્ત સૂચિત સુપરવાઇઝર હજુ પણ કંપની સાથે કામ કરે છે?");
                    formObject.setNGValue("Label145", "7.1 જુના સુપરવાઇઝર ને છોડવાની તારીખ");
                    formObject.setNGValue("Label146", "7.1 સુપરવાઇઝરનું નામ");
                    formObject.setNGValue("Label148", "7.2 સુપરવાઈઝર ની જન્મ તારીખ");
                    formObject.setNGValue("Label149", "7.3 જોડાયા ની તારીખ");
                    formObject.setNGValue("Label150", "8. સરનામામાં કોઈ ફેરફાર છે?");
                    formObject.setNGValue("Label151", "8.1 ગૃહ નં. / ફ્લેટ નંબર / બ્લોક નં.");
                    formObject.setNGValue("Label152", "8.2 બિલ્ડિંગ નામ / એપાર્ટમેન્ટ નામ");
                    formObject.setNGValue("Label153", "8.3 તાલુકાનું નામ");
                    formObject.setNGValue("Label154", "8.4 જિલ્લાનું નામ");
                    formObject.setNGValue("Label155", "8.5 રાજ્ય");
                    formObject.setNGValue("Label156", "8.6 પીન કોડ");
                    formObject.setNGValue("Label157", "8.7 સરનામાના પુરાવા માટે વીજળી બિલ અથવાકોઈપણ સરકાર માન્ય ID ની સાબિતી જોડો");

                }
            }

            // code for assigned to field on status change
            if (pEvent.getSource().getName().equalsIgnoreCase("file_status")) {
                file_status = formObject.getNGValue("file_status");
                candidate_type = formObject.getNGValue("candidate_type");
                System.out.println("status values-------------->" + file_status + "value of candidate type----->" + candidate_type);

                if (activityName.equalsIgnoreCase("StartEvent1") || activityName.equalsIgnoreCase("Start")) {
                    System.out.println("activity name aftr------" + activityName);
                    if (file_status.equalsIgnoreCase("File In Processing")) {
                        System.out.println("file_status name aftr------" + file_status);
                        System.out.println("candidate_type name aftr------" + candidate_type);
                        if (candidate_type.equalsIgnoreCase("New Contractor License") || candidate_type.equalsIgnoreCase("Contractor Renewal")) {
                            System.out.println("candidate_type name aftr------" + candidate_type);
                            Query = "select username from ng_user_details where roletype = 'Clerk' and rolename = 'Head Clerk'";
                            System.out.println("value of Query---" + candidate_type + " value of ----" + Query);
                            objGeneral.setAssign(Query);
                        }
                        if (candidate_type.equalsIgnoreCase("New Supervisor Exemption") || candidate_type.equalsIgnoreCase("New Wireman Exemption")) {
                            Query = "select username from ng_user_details where roletype = 'Clerk' and rolename = 'Sr.clerk'";
                            objGeneral.setAssign(Query);
                        }
                        if (candidate_type.equalsIgnoreCase("Duplicate")) {
                            Query = "select username from ng_user_details where roletype = 'Assistant officer'";
                            objGeneral.setAssign(Query);
                        }
                    }
                }
                if (activityName.equalsIgnoreCase("Clerk")) {
                    formObject.clear("assigned_to");
                    if (file_status.equalsIgnoreCase("File In Processing")) {

                        Query = "select username from ng_user_details where roletype = 'Assistant officer'";
                        objGeneral.setAssign(Query);
                    }
                }

                if (activityName.equalsIgnoreCase("Assistant officer")) {
                    formObject.clear("assigned_to");
                    if (file_status.equalsIgnoreCase("File In Processing")) {
                        Query = "select username from ng_user_details where roletype = 'AEI'";
                        objGeneral.setAssign(Query);
                    }

                    if (file_status.equalsIgnoreCase("Documents Not Completed")) {
                        System.out.println("insinde ------ not completed-->");
                        Query = "select username from ng_user_details where roletype = 'Clerk'";
                        System.out.println("SEcond query--------------------->" + Query);
                        objGeneral.setAssign(Query);
                    }
                }

                if (activityName.equalsIgnoreCase("AEI")) {
                    formObject.clear("assigned_to");
                    if (file_status.equalsIgnoreCase("File In Processing")) {
                        Query = "select username from ng_user_details where roletype = 'Secretary'";
                        objGeneral.setAssign(Query);
                    }

                    if (file_status.equalsIgnoreCase("Documents Not Completed")) {
                        Query = "select username from ng_user_details where roletype = 'Clerk'";
                        objGeneral.setAssign(Query);
                    }
                }
                if (activityName.equalsIgnoreCase("Secretary")) {
                    formObject.clear("assigned_to");
                    if (file_status.equalsIgnoreCase("File In Processing")) {
                        Query = "select username from ng_user_details where roletype = 'President'";
                        objGeneral.setAssign(Query);
                    }

                    if (file_status.equalsIgnoreCase("Documents Not Completed")) {
                        Query = "select username from ng_user_details where roletype = 'Clerk'";
                        objGeneral.setAssign(Query);
                    }
                }
                if (activityName.equalsIgnoreCase("President")) {
                    formObject.clear("assigned_to");
                    if (file_status.equalsIgnoreCase("Approved")) {
                        Query = "select username from ng_user_details where roletype = 'Assistant officer'";
                        objGeneral.setAssign(Query);
                    }
                    if (file_status.equalsIgnoreCase("Documents Not Completed")) {
                        Query = "select username from ng_user_details where roletype = 'Clerk'";
                        objGeneral.setAssign(Query);
                    }
                    if (file_status.equalsIgnoreCase("Not Approved")) {
                        Query = "select username from ng_user_details where roletype = 'Assistant officer'";
                        objGeneral.setAssign(Query);
                    }
                }
//                if (file_status.equalsIgnoreCase("")) {
//                    formObject.clear("assigned_to");
//                }

            }

        }

        if (pEvent.getType().name().equalsIgnoreCase("MOUSE_CLICKED")) {

            
            
            //code for template indigo test
            if (pEvent.getSource().getName().equalsIgnoreCase("gente")) {
                System.out.println("alert inside gente");
                try {
                System.out.println("alert inside try");
                    Document document = new Document();
                    PdfWriter.getInstance(document, new FileOutputStream("D:\\Newgen\\Server\\Certificate\\Exemption\\Supervisor\\" +formObject.getNGValue("file_no") + ".pdf"));
                    document.open();
                    //temp.addContent(document);
                    //document.close();
                    // Read file code

                } catch (Exception e) {
                    e.printStackTrace();
                }
                //String file_no = null;
                String file1 = "\\Exemption\\Supervisor\\"+formObject.getNGValue("file_no");
                HashMap<Integer, String> hm1 = new HashMap<Integer, String>();  // not nullable HashMap
                throw new ValidatorException(new CustomExceptionHandler("Error", file1 ,
                        "MOUSE_CLICKED", hm1));

            }

            
            
            // Code for generating PDF Certificate
            if (pEvent.getSource().getName().equalsIgnoreCase("Genc")) {

                candidate_type = formObject.getNGValue("candidate_type");
               
                file_noforcertificate = formObject.getNGValue("file_no");

                String qr;
                String licNo;
                int lic = 0;
                String licTemp;
                General gn = new General();

                if (candidate_type.equalsIgnoreCase("New Supervisor Exemption")) {
                    file_noforcertificate = formObject.getNGValue("file_no");

                    qr = "SELECT max(split_part(license_no, '-', 3)) FROM ext_exemption_contractor where candidate_type = 'New Supervisor Exemption'";
                    result = formObject.getDataFromDataSource(qr);

                    licNo = result.get(0).get(0);

                    //System.out.println("Number of Rows -------> "+row);
                    System.out.println("licNo -------> " + licNo);

                    if (licNo == null || licNo.equalsIgnoreCase("null")) {
                        System.out.println("-------Inside IF ----------");
                        lic = 1;
                    } else {
                        System.out.println("-------Inside else ----------");

                        System.out.println("-------Inside IF ----------");
//                        result = formObject.getDataFromDataSource(qr); 
//                        licTemp = result.get(0).get(0);
//                        System.out.println("Value Of licTemp----->"+licTemp+"--");

                        if (!formObject.getNGValue("license_no").equals("")) {

                            System.out.println("Inside IF (IF)");
                            qr = "select split_part(license_no, '-', 3) from ext_exemption_contractor where processid = '" + processInstanceId + "'";
                            result = formObject.getDataFromDataSource(qr);
                            licTemp = result.get(0).get(0);
                            lic = Integer.parseInt(licTemp);
                            System.out.println("Inside IF (IF) Value of lic--->" + lic);

                        } else {

                            System.out.println("Inside IF (ELSE) Value of lic");

                            qr = "select max(split_part(license_no, '-', 3)) from ext_exemption_contractor where candidate_type = 'New Supervisor Exemption'";
                            result = formObject.getDataFromDataSource(qr);
                            System.out.println("--------------------" + qr);
                            licTemp = result.get(0).get(0);
                            System.out.println("Value of licTemp-------------------->" + licTemp);
                            lic = Integer.parseInt(licTemp) + 1;
                            System.out.println("Inside ELSE-IF Value of lic--->" + lic);
                        }
                    }

                    Calendar now = Calendar.getInstance();
                    int year = now.get(Calendar.YEAR);
                    String Syear = String.valueOf(year);
                    System.out.println("lic -------> " + lic);
                    licNo = "G/GS-E-" + String.format("%06d", lic) + "-" + gn.getTQ(formObject.getNGValue("technical_qualification")) + "-" + Syear;
                    formObject.setNGValue("license_no", licNo);

                    formObject.RaiseEvent("WFSave");

//                    formObject.getDataFromDataSource("update ext_exemption_contractor SET license_no='" + licNo + "' WHERE itemindex = '" +  + "'");
                    SupervisorTemplate obj = new SupervisorTemplate("D:\\Newgen\\Server\\Certificate\\Exemption\\Supervisor\\" + file_noforcertificate + ".pdf", licNo, "SUPERVISOR", "");
                    obj.pdfcreation();


                    file_noforcertificate = "\\Exemption\\Supervisor\\" + file_noforcertificate;

                    HashMap<Integer, String> hm = new HashMap<Integer, String>();  // not nullable HashMap
                    throw new ValidatorException(new CustomExceptionHandler("Error Message", file_noforcertificate,
                            "MOUSE_CLICKED", hm));
                } else if (candidate_type.equalsIgnoreCase("New Contractor License")) {
                    file_noforcertificate = formObject.getNGValue("file_no");

                    qr = "SELECT max(split_part(license_no, '-', 2)) FROM ext_exemption_contractor where candidate_type = 'New Contractor License'";
                    result = formObject.getDataFromDataSource(qr);

                    licNo = result.get(0).get(0);

                    //System.out.println("Number of Rows -------> "+row);
                    System.out.println("licNo -------> " + licNo);

                    if (licNo == null || licNo.equalsIgnoreCase("null")) {
                        System.out.println("-------Inside IF ----------");
                        lic = 1;
                    } else {

                        if (!formObject.getNGValue("license_no").equals("")) {

                            System.out.println("Inside IF (IF)");
                            qr = "select split_part(license_no, '-', 2) from ext_exemption_contractor where processid = '" + processInstanceId + "'";
                            result = formObject.getDataFromDataSource(qr);
                            licTemp = result.get(0).get(0);
                            lic = Integer.parseInt(licTemp);
                            System.out.println("Inside IF (IF) Value of lic--->" + lic);

                        } else {

                            System.out.println("Inside IF (ELSE) Value of lic");

                            qr = "select max(split_part(license_no, '-', 2)) from ext_exemption_contractor where candidate_type = 'New Contractor License'";
                            result = formObject.getDataFromDataSource(qr);
                            System.out.println("--------------------" + qr);
                            licTemp = result.get(0).get(0);
                            System.out.println("Value of licTemp-------------------->" + licTemp);
                            lic = Integer.parseInt(licTemp) + 1;
                            System.out.println("Inside ELSE-IF Value of lic--->" + lic);
                        }
                    }

                    System.out.println("lic -------> " + lic);
                    licNo = "G/" + formObject.getNGValue("Text37") + "/C-" + String.format("%03d", lic);
                    formObject.setNGValue("license_no", licNo);

                    formObject.RaiseEvent("WFSave");

//                    formObject.getDataFromDataSource("update ext_exemption_contractor SET license_no='" + licNo + "' WHERE itemindex = '" +  + "'");
                    ElectricalTemplate obj = new ElectricalTemplate("D:\\Newgen\\Server\\Certificate\\Exemption\\Contractor\\" + file_noforcertificate + ".pdf", licNo);
                    obj.pdfcreation();

                    file_noforcertificate = "\\Exemption\\Contractor\\" + file_noforcertificate;

                    HashMap<Integer, String> hm = new HashMap<Integer, String>();  // not nullable HashMap
                    throw new ValidatorException(new CustomExceptionHandler("Error Message", file_noforcertificate,
                            "MOUSE_CLICKED", hm));
                } else if (candidate_type.equalsIgnoreCase("New Wireman Exemption")) {
                    file_noforcertificate = formObject.getNGValue("file_no");
                    
                    file_noforcertificate = formObject.getNGValue("file_no");

                    qr = "SELECT max(split_part(license_no, '-', 3)) FROM ext_exemption_contractor where candidate_type = 'New Wireman Exemption'";
                    result = formObject.getDataFromDataSource(qr);

                    licNo = result.get(0).get(0);

                    //System.out.println("Number of Rows -------> "+row);
                    System.out.println("licNo -------> " + licNo);

                    if (licNo == null || licNo.equalsIgnoreCase("null")) {
                        System.out.println("-------Inside IF ----------");
                        lic = 1;
                    } else {
                        System.out.println("-------Inside else ----------");

                        System.out.println("-------Inside IF ----------");
//                        result = formObject.getDataFromDataSource(qr); 
//                        licTemp = result.get(0).get(0);
//                        System.out.println("Value Of licTemp----->"+licTemp+"--");

                        if (!formObject.getNGValue("license_no").equals("")) {

                            System.out.println("Inside IF (IF)");
                            qr = "select split_part(license_no, '-', 3) from ext_exemption_contractor where processid = '" + processInstanceId + "'";
                            result = formObject.getDataFromDataSource(qr);
                            licTemp = result.get(0).get(0);
                            lic = Integer.parseInt(licTemp);
                            System.out.println("Inside IF (IF) Value of lic--->" + lic);

                        } else {

                            System.out.println("Inside IF (ELSE) Value of lic");

                            qr = "select max(split_part(license_no, '-', 3)) from ext_exemption_contractor where candidate_type = 'New Wireman Exemption'";
                            result = formObject.getDataFromDataSource(qr);
                            System.out.println("--------------------" + qr);
                            licTemp = result.get(0).get(0);
                            System.out.println("Value of licTemp-------------------->" + licTemp);
                            lic = Integer.parseInt(licTemp) + 1;
                            System.out.println("Inside ELSE-IF Value of lic--->" + lic);
                        }
                    }

                    Calendar now = Calendar.getInstance();
                    int year = now.get(Calendar.YEAR);
                    String Syear = String.valueOf(year);
                    System.out.println("lic -------> " + lic);
                    licNo = "G/GS-E-" + String.format("%04d", lic) + "-" + gn.getTQ(formObject.getNGValue("technical_qualification")) + "-" + Syear;
                    formObject.setNGValue("license_no", licNo);

                    formObject.RaiseEvent("WFSave");

//                    formObject.getDataFromDataSource("update ext_exemption_contractor SET license_no='" + licNo + "' WHERE itemindex = '" +  + "'");
                    SupervisorTemplate obj = new SupervisorTemplate("D:\\Newgen\\Server\\Certificate\\Exemption\\Wireman\\" + file_noforcertificate + ".pdf", licNo, "WIREMAN", "");
                    obj.pdfcreation();


                    file_noforcertificate = "\\Exemption\\Wireman\\" + file_noforcertificate;

                    HashMap<Integer, String> hm = new HashMap<Integer, String>();  // not nullable HashMap
                    throw new ValidatorException(new CustomExceptionHandler("Error Message", file_noforcertificate,
                            "MOUSE_CLICKED", hm));
                    
                    
                }else if (candidate_type.equalsIgnoreCase("Duplicate")) {
                    file_noforcertificate = formObject.getNGValue("file_no");
                    
                    licNo = formObject.getNGValue("license_no");

//                    formObject.getDataFromDataSource("update ext_exemption_contractor SET license_no='" + licNo + "' WHERE itemindex = '" +  + "'");
                    SupervisorTemplate obj = new SupervisorTemplate("D:\\Newgen\\Server\\Certificate\\Exemption\\Wireman\\" + file_noforcertificate + ".pdf", licNo, "DUPLICATE WIREMAN", "DUPLICATE");
                    obj.pdfcreation();


                    file_noforcertificate = "\\Exemption\\Wireman\\" + file_noforcertificate;

                    HashMap<Integer, String> hm = new HashMap<Integer, String>();  // not nullable HashMap
                    throw new ValidatorException(new CustomExceptionHandler("Error Message", file_noforcertificate,
                            "MOUSE_CLICKED", hm));
                    
                    
                }

            }

            // list view code starts from here----------------
            if (pEvent.getSource().getName().equalsIgnoreCase("btn")) {
                formObject.ExecuteExternalCommand("NGAddRow", "q_orgdetails");
                System.out.println("After addition of list view--fisrt->");

            }

            if (pEvent.getSource().getName().equalsIgnoreCase("btn_cghs_upload")) {
            }
            if (pEvent.getSource().getName().equalsIgnoreCase("q_orgdetails")) {

                ListView lv1 = (ListView) formObject.getComponent("q_orgdetails");
                int rowindex = lv1.getSelectedRowIndex();
                String listviewdata = formObject.getNGValue("q_orgdetails", rowindex, 0);
                System.out.println("My Value----" + listviewdata);
                /*
                 String insQuery = "insert into complex_documents (file_no,form_type,document,pinstanceid,docid) values ('a','3b','birthproof','" + processInstanceId + "',333)";
                 System.out.println(insQuery);
                 formObject.saveDataIntoDataSource(insQuery);
                 */
                Query = "select docid,document ,form_type from complex_documents where form_type='" + listviewdata + "'  and pinstanceid = '" + processInstanceId + "'";
                System.out.println("Query----" + Query);

                arrayListnew2 = formObject.getDataFromDataSource(Query);
                Iterator iteratornew2 = arrayListnew2.iterator();
                while (iteratornew2.hasNext()) {
                    List<String> desrow2 = (List<String>) iteratornew2.next();
                    docid = desrow2.get(0);
                    documentname = desrow2.get(1);
                     form_type =desrow2.get(2);
                    System.out.println(docid);
                    System.out.println(documentname);
                    System.out.println(form_type);

                    if (documentname.equalsIgnoreCase("birthproof")) {

                        formObject.setNGValue("docidbirthproof", docid);
                        }
                   

                }
            }
            // valid invalid code starts from here

            if (pEvent.getSource().getName().equalsIgnoreCase("cmAdd")) {
                formObject.ExecuteExternalCommand("NGAddRow", "q_execon_comment1");
                System.out.println("After addition of list view--fisrt->");

            }
            if (pEvent.getSource().getName().equalsIgnoreCase("C2")) {
                formObject.ExecuteExternalCommand("NGAddRow", "q_execon_comment2");
                System.out.println("After addition of list view--fisrt->");

            }
            if (pEvent.getSource().getName().substring(0, 5).equalsIgnoreCase("valid")) {
                String checkboxID = pEvent.getSource().getName();
                String docVal = checkboxID.substring(5, checkboxID.length());
                System.out.println("Doc_type--------" + docVal);
                
                ListView firstlv = null;
                Query = "select label_seq|| ' | '||label_name , form_part from ng_label_doctypemapping where upper(doctype) = upper('" + docVal + "') and processid='exemption_contractor'";
                System.out.println(Query);
                temparray = formObject.getDataFromDataSource(Query);
                String temp = temparray.get(0).get(0); // value of label_seq plus label name
                System.out.println("value of temp in valid code-----" + temp);
                String formPart = temparray.get(0).get(1);
                System.out.println("value of formPart in valid code-----" + formPart);
                if (formPart.equalsIgnoreCase("1")) {

                    comboID = "fieldname1";
                    comment_p1 = "q_execon_comment1";// id of list view
                    firstlv = (ListView) formObject.getComponent("q_execon_comment1");
                } else if (formPart.equalsIgnoreCase("2")) {
                    comboID = "fieldname2"; //id of label field
                    comment_p1 = "q_execon_comment2";
                    firstlv = (ListView) formObject.getComponent("q_execon_comment2");
                    
                    if(docVal.equalsIgnoreCase("birthproof") || docVal.equalsIgnoreCase("orgaddressproof") ){
                       temp =form_type +" | "+ temp;
                        
                    }
                        
                    }
                

                System.out.println("temparray--0.0---- " + temp);

                String checkboxValue = formObject.getNGValue(checkboxID);
                System.out.println("checkboxValue--------" + checkboxValue);

                if (checkboxValue.equalsIgnoreCase("false")) {
                    System.out.println("Inside false");

                    formObject.addItem(comboID, temp);
                    //ng_invalid code
                     Query = "select form_part from ng_label_doctypemapping where  LOWER(doc_type)= LOWER('" + docVal + "')";
                     temparray = formObject.getDataFromDataSource(Query);
                     formPart = temparray.get(0).get(0);
                     System.out.println("value of label name----"+formPart);
                     System.out.println("value of docVal name----"+docVal);
                     System.out.println("value of processInstanceId name----"+processInstanceId);
                     System.out.println("value of temp name----"+temp);
                     

                    Query = "INSERT INTO ng_invalid_docs(doctype,pid,formfield,form_part) VALUES('" + docVal + "','" + processInstanceId + "','" + temp + "','" + formPart + "')";
                    formObject.saveDataIntoDataSource(Query);
                } else if (checkboxValue.equalsIgnoreCase("true")) {
                    System.out.println("Inside true");
                    int count = formObject.getItemCount(comboID);
                    System.out.println(count + "<<count");

                    for (int j = 0; j < count;  j++) {
                        String sValue = formObject.getNGValueAt(comboID, j); //VALUE
                        String sText = formObject.getNGItemText(comboID, j); //laBEL                
                        System.out.println(sValue + " --><-- " + sText);

                        if (temp.equalsIgnoreCase(sValue)) {
                            System.out.println("Inside value same");
                            try {
                                Query = "DELETE from ng_invalid_docs where formfield='" + temp + "' and pid='" + processInstanceId + "' and form_part='" + formPart + "'";
                                System.out.println("Query DELETE----" + Query);
                                formObject.saveDataIntoDataSource(Query);
                                formObject.removeItem(comboID, j);

                                int x = firstlv.getRowCount();
                                System.out.println("length value ------" + x);
                                for (int i = 0; i < x; i++) {
                                    String cm = formObject.getNGValue("comment1");
                                    System.out.println("value of comment1" + cm);
                                    String tmclass = formObject.getNGValue(comment_p1, i, 0);
                                    System.out.println("inside for loop -- " + tmclass + "temp vlaue---" + temp + "----" + temp.equalsIgnoreCase(tmclass));
                                    if (temp.equalsIgnoreCase(tmclass)) {
                                        firstlv.deleteRow(i);
                                        OFUtility.render(firstlv);

                                        System.out.println("Inside if condition part- NEW----" + i);
                                    }
                                }
                            } catch (Exception ex) {
                                Logger.getLogger(Head.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
                //grid valid code starts from here;
              
                
            }

        }
    }

    @Override
    public void formLoaded(FormEvent arg0) {
        // TODO Auto-generated method stub
        System.out.println(" -------------------Intiation Workstep Loaded from formloaded.----------------");
        // TODO Auto-generated method stub
        System.out.println("form Loaded called");
        formObject = FormContext.getCurrentInstance().getFormReference();
        formConfig = FormContext.getCurrentInstance().getFormConfig();
        System.out.println("formObject :" + formObject);
        System.out.println("formConfig :" + formConfig);
        try {

            activityName = formObject.getWFActivityName();
            System.out.println("#####################ActivityName##############################3" + activityName);
            //capturing system fields----starts
            engineName = formConfig.getConfigElement("EngineName");
            sessionId = formConfig.getConfigElement("DMSSessionId");
            folderId = formConfig.getConfigElement("FolderId");
            serverUrl = formConfig.getConfigElement("ServletPath");
            //ServletUrl = serverUrl + "/servlet/ExternalServlet";
            processInstanceId = formConfig.getConfigElement("ProcessInstanceId");
            workItemId = formConfig.getConfigElement("WorkitemId");
            userName = formConfig.getConfigElement("UserName");
            processDefId = formConfig.getConfigElement("ProcessDefId");
            System.out.println("ProcessInstanceId===== " + processInstanceId);
            System.out.println("Activityname=====" + activityName);
            System.out.println("CabinetName====" + engineName);
            System.out.println("sessionId====" + sessionId);
            System.out.println("Username====" + userName);
            System.out.println("workItemId====" + workItemId);
            System.out.println("workItemId====" + engineName);
            System.out.println("workItemId====" + processDefId);

            // formObject.setNGValue("activity_name", userName);
        } catch (Exception e) {
            System.out.println("Exception in FieldValueBagSet::::" + e.getMessage());
        }
    }

    @Override
    public void formPopulated(FormEvent arg0) {
        // TODO Auto-generated method stub
        try {
            objGeneral = new General();
            System.out.println("----------------------Intiation Workstep Loaded from form populated.---------------------------");
            formObject = FormContext.getCurrentInstance().getFormReference();
            formConfig = FormContext.getCurrentInstance().getFormConfig();
            System.out.println("printing my activity name------->" + activityName);
            String fromEmail = "chetantomar@gmail.com";
            formObject.setNGValue("from", fromEmail);
            //valid /invalid 
            Query = "select formfield,form_part from ng_invalid_docs where pid='" + processInstanceId + "'";
            valid = formObject.getDataFromDataSource(Query);
              for(int k=0;k<valid.size();k++){
                          
                    String fieldname = valid.get(k).get(0);
                      String  form_part= valid.get(k).get(1);
                     
                        if (form_part.equalsIgnoreCase("1")) {
                    comboID = "fieldname1";
                    comment_p1 = "q_comment1";
                    
                }  else if (form_part.equalsIgnoreCase("2")) {
                    comboID = "fieldname2";
                    comment_p1 = "q_comment2";
                    
                } 
                        formObject.addItem(comboID, fieldname);         
                
                  }
            
            
            // code for dropdown list visiblity on each Activity
            String prevs_stage = formObject.getNGValue("q_prevs_activity");
            String prevs_status = formObject.getNGValue("q_prevs_status");

            if (activityName.equalsIgnoreCase("StartEvent1")) {
                formObject.addItem("file_status", "File In Processing");

            }
            if (activityName.equalsIgnoreCase("Clerk")) {
                if (prevs_stage.equalsIgnoreCase("StartEvent1")) {
                    formObject.addItem("file_status", "File In Processing");
                }
                if (prevs_status.equalsIgnoreCase("Documents Not Completed")
                        && ((prevs_stage.equalsIgnoreCase("Assistant officer")
                        || (prevs_stage.equalsIgnoreCase("AEI"))
                        || (prevs_stage.equalsIgnoreCase("Secretary")
                        || (prevs_stage.equalsIgnoreCase("President")))))) {
                    formObject.addItem("file_status", "Query Sent To Applicant");

                }
            }
            if (activityName.equalsIgnoreCase("Assistant officer")) {
                if(prevs_stage.equalsIgnoreCase("Clerk")){
                formObject.addItem("file_status", "File In Processing");
                }
                if (prevs_stage.equalsIgnoreCase("President") ) {
                    formObject.setVisible("Genc", true);
                    formObject.clear("file_status");
                    formObject.addItem("file_status", "Approved");

                }
                if (prevs_stage.equalsIgnoreCase("President") && (prevs_status.equalsIgnoreCase("Not Approved"))) {
                    formObject.clear("file_status");

                }

            }

            if (activityName.equalsIgnoreCase("AEI")) {
                formObject.addItem("file_status", "File In Processing");
                formObject.addItem("file_status", "Documents Not Completed");

            }
            if (activityName.equalsIgnoreCase("Secretary")) {
                formObject.addItem("file_status", "File In Processing");
                formObject.addItem("file_status", "Documents Not Completed");

            }
            if (activityName.equalsIgnoreCase("President")) {
                formObject.addItem("file_status", "Approved");
                formObject.addItem("file_status", "Documents Not Completed");
                formObject.addItem("file_status", "Not Approved");

            }

            objGeneral.getDocIndex(processInstanceId, "exemption_contractor");
            candidate_type = formObject.getNGValue("candidate_type");
           // setTechnicalQualification(candidate_type); // technical qualification drop down list
            formObject.setNGValue("addedby1", userName);
            formObject.setNGValue("addedby2", userName);

        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Exception in FieldValueBagSet::::" + e.getMessage());

        }
    }

    @Override
    public void saveFormCompleted(FormEvent arg0) throws ValidatorException {
        // TODO Auto-generated method stub
        formObject = FormContext.getCurrentInstance().getFormReference();
        formConfig = FormContext.getCurrentInstance().getFormConfig();

    }

    @Override
    public void saveFormStarted(FormEvent arg0) throws ValidatorException {
        // TODO Auto-generated method stub
        formObject = FormContext.getCurrentInstance().getFormReference();
        formConfig = FormContext.getCurrentInstance().getFormConfig();

    }

    @Override
    public void submitFormCompleted(FormEvent arg0) throws ValidatorException {
        // TODO Auto-generated method stub
        formObject = FormContext.getCurrentInstance().getFormReference();
        formConfig = FormContext.getCurrentInstance().getFormConfig();

    }

    @Override
    public void submitFormStarted(FormEvent arg0) throws ValidatorException {
        // TODO Auto-generated method stub
        formObject = FormContext.getCurrentInstance().getFormReference();
        formConfig = FormContext.getCurrentInstance().getFormConfig();
        System.out.print("-------------------submitform started---------");
        
         String fileststatus = null, checkboxid = null, newdocname = null, docnameval = null,
                finaldocs = null, validfinal = null, docid_field = null, checkbocvalue = null,
                docindex = null, doccname = null, docidfinal = null;
        formObject.setNGValue("q_prevs_activity", activityName);
        formObject.setNGValue("q_prevs_status", file_status);
       
        //code for doc validation
        Query = "select var_rec_1 from WFINSTRUMENTTABLE where processinstanceID='" + processInstanceId + "'";

        temparray = formObject.getDataFromDataSource(Query);
        String parentfolderindex = temparray.get(0).get(0);
        Query = "select documentindex from pdbdocumentcontent where parentfolderindex =" + parentfolderindex + " ";
        temparray = formObject.getDataFromDataSource(Query);

        for (int i = 0; i < temparray.size(); i++) {
            if (i == 0) {
                docindex = temparray.get(i).get(0);
            } else {
                docindex = docindex + "," + temparray.get(i).get(0);
            }
        }
        Query = "select name from pdbdocument where documentindex in (" + docindex + ")";
        docarray1 = formObject.getDataFromDataSource(Query);

        for (int i = 0; i < docarray1.size(); i++) {
            doccname = docarray1.get(i).get(0);

            newdocname = "docid" + doccname;
            docid_field = formObject.getNGValue(newdocname);
            checkboxid = "valid" + doccname;
            checkbocvalue = formObject.getNGValue(checkboxid);

            //activity after clerk(for validation document not completed)
            if (activityName.equalsIgnoreCase("Assistant officer")
                    || activityName.equalsIgnoreCase("AEI")
                    || activityName.equalsIgnoreCase("Secretary")
                    || activityName.equalsIgnoreCase("President")) {

                if ((!docid_field.equalsIgnoreCase(""))
                        && checkbocvalue.equalsIgnoreCase("false")
                        && (!fileststatus.equalsIgnoreCase("Document not Completed"))) {
                    throw new ValidatorException(new FacesMessage("You can't proceed with invalid documents and file status as 'File in Processing'. Please mark file status as 'Document Not Completed'", ""));
                }

            }

        }

    }

    @Override
    public void initialize() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    private void setTechnicalQualification(String candidate_type) {

        formObject.clear("technical_qualification");
        if (candidate_type.equalsIgnoreCase("New Wireman Exemption")) {
            formObject.addItem("technical_qualification", "National Apprenticeship Certificate(Electrician)");
            formObject.addItem("technical_qualification", "National Apprenticeship Certificate(Wireman)");
            formObject.addItem("technical_qualification", "National Apprenticeship Certificate(Lineman)");
            formObject.addItem("technical_qualification", "National Trade Certificate(Electrician)");
            formObject.addItem("technical_qualification", "National Trade Certificate(Wireman)");
            formObject.addItem("technical_qualification", "National Trade Certificate(Lineman)");
            formObject.addItem("technical_qualification", "Electrical Service Technician");
            formObject.addItem("technical_qualification", "Electrical Installation,Wiring And Jointing From Technical Examination Board");
            formObject.addItem("technical_qualification", "Any Other Qualification Equivalent National Trade Or Apprenticeship Certificate");
            formObject.addItem("technical_qualification", "Electrical Service Technician");
        } else if (candidate_type.equalsIgnoreCase("New Supervisor Exemption")) {
            formObject.addItem("technical_qualification", "Diploma In Electrical Engineering");
            formObject.addItem("technical_qualification", "Degree In Electrical Engineering");
            formObject.addItem("technical_qualification", "Diploma In Electrical & Electronics Engineering");
            formObject.addItem("technical_qualification", "Degree In Electrical & Electronics Engineering");
            formObject.addItem("technical_qualification", "Electric Service Technician + 2 Years Practical Experience");
            formObject.addItem("technical_qualification", "Electrician (NCVT)+ National Apprenticeship Certificate In Electrician + 1 Year Practical Experience");
            formObject.addItem("technical_qualification", "B.E/B.Tech In Electrical Engineering");
            formObject.addItem("technical_qualification", "B.E/B.Tech In Electrical & Electronics Engineering");
            formObject.addItem("technical_qualification", "Any Other Qualification Equivalent To Degree/Diploma In Electrical Engineering");
        }
    }
}
