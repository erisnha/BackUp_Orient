package com.newgen.exainternew;

import java.awt.Color;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

import javax.faces.validator.ValidatorException;


import com.newgen.common.General;
import com.newgen.common.PicklistListenerHandler;
import com.newgen.omniforms.FormConfig;
import com.newgen.omniforms.FormReference;
import com.newgen.omniforms.component.PickList;
import com.newgen.omniforms.context.FormContext;
import com.newgen.omniforms.event.ComponentEvent;
import com.newgen.omniforms.event.FormEvent;
import com.newgen.omniforms.listener.FormListener;
import java.text.ParseException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import sun.awt.windows.WBufferStrategy;

public class interstate implements FormListener {

    //FormReference objFormReference = null; //FormContext.getCurrentInstance().getFormReference();
    FormReference formObject = null;
    FormConfig formConfig = null;
    String activityName = null;
    String engineName = null;
    String dropvalue1 = null;
    String varname = null;
    String sessionId = null;
    String folderId = null;
    String serverUrl = null;
    String processInstanceId = null;
    String workItemId = null;
    String userName = null;
    String processDefId = null;
    String Query = null;
    List<List<String>> result;
    PickList objPicklist;
    General objGeneral = null;
    String assign = null;
    String formtype = null;
    String lang_select = null;
    String filestatus = null;
    String value = null;
    String act=null;
    List<List<String>> temparray, docarray, docarrayid;

    /* public Head(FormReference formObject) {
     super();
     System.out.println("In COnstructor");
     this.formObject = formObject;
     } */
    @Override
    public void continueExecution(String arg0, HashMap<String, String> arg1) {
        // TODO Auto-generated method stub
    }

    @Override
    public void eventDispatched(ComponentEvent pEvent) throws ValidatorException {
        // TODO Auto-generated method stub
        System.out.println("Value Change Event :" + pEvent);
        System.out.println("pEvent.getType() :" + pEvent.getType());
        System.out.println("pEvent.getType().name() :" + pEvent.getType().name());
        formObject = FormContext.getCurrentInstance().getFormReference();
        formConfig = FormContext.getCurrentInstance().getFormConfig();
        objGeneral = new General();
        if (pEvent.getType().name().equalsIgnoreCase("VALUE_CHANGED")) {

            //code for language selection
            if (pEvent.getSource().getName().equalsIgnoreCase("Combo3")) {
                lang_select = formObject.getNGValue("Combo3");
                if (lang_select.equalsIgnoreCase("English")) {
                    formObject.setNGValue("Label4", "1. Full name of the applicant");
                    formObject.setNGValue("Label6", "2. Phone No. of the applicant");
                    formObject.setNGValue("Label8", "3. Date of Birth");
                    formObject.setNGValue("Label9", "4.Age");
                }
                if (lang_select.equalsIgnoreCase("Gujarati")) {
                    formObject.setNGValue("Label4", "અરજદાર નું પૂરું નામ");
                    formObject.setNGValue("Label6", "અરજદાર નો ફોન નંબર");
                    formObject.setNGValue("Label8", "જન્મ તારીખ");
                    formObject.setNGValue("Label9", "ઉંમર");
                }
            }
            //Code for set name value

            if (pEvent.getSource().getName().equalsIgnoreCase("app_name_a1_k_l")) {
                varname = formObject.getNGValue("app_name_a1_k_l");

                formObject.setNGValue("Text2", varname);
                formObject.setNGValue("Text16", varname);
                formObject.setNGValue("Text15", varname);
            }

            if (pEvent.getSource().getName().equalsIgnoreCase("f_type")) {
                System.out.println("coming inside if-----");

                formtype = formObject.getNGValue("f_type");
                System.out.println("coming up to here value :----- >" + formtype);


                if (formtype.equalsIgnoreCase("Examination")) {
                    System.out.println("coming up to here 1----- >" + formtype);

                    formObject.setSheetVisible("Tab1", 2, true);
                    formObject.setSheetVisible("Tab1", 1, true);
                    formObject.setSheetVisible("Tab1", 0, false);

                    formObject.setNGValue("Label144", "Examination/certificate for electric supervisor/wireman");
                }

                if (formtype.equalsIgnoreCase("Permit")) {

                    System.out.println("coming up to here 3----- >" + formtype);

                    formObject.setSheetVisible("Tab1", 0, true);
                    formObject.setSheetVisible("Tab1", 1, false);
                    formObject.setSheetVisible("Tab1", 2, false);

                    formObject.setNGValue("Label144", "Electrical Supervisor/wireman interstate recognition for permit in Gujarat");
                }
            }

            // Code for Assigned_to

            if (pEvent.getSource().getName().equalsIgnoreCase("file_status")) {
                filestatus = formObject.getNGValue("file_status");
                System.out.println("status values-------------->" + filestatus);
                //String status = formObject.getNGValue("q_pstatus");

                if (activityName.equalsIgnoreCase("StartEvent1")) {

                    if (filestatus.equalsIgnoreCase("File In Processing")) {
                        Query = "select username from ng_user_details where roletype = 'Clerk'";
                        objGeneral.setAssign(Query);
                    }
                }

                if (activityName.equalsIgnoreCase("Sr Clerk")) {

                    if (filestatus.equalsIgnoreCase("File In Processing")) {
                        Query = "select username from ng_user_details where roletype = 'Assistant officer'";
                        objGeneral.setAssign(Query);
                    }
                }

                if (activityName.equalsIgnoreCase("Assistant Officer")) {

                   if(filestatus.equalsIgnoreCase("File In Processing")){
                             Query = "select username from ng_user_details where roletype = 'AEI'";
                             objGeneral.setAssign(Query);
                            }
                        
                         if(filestatus.equalsIgnoreCase("Documents Not Completed")){
                           
                             Query = "select username from ng_user_details where roletype = 'Clerk'";
                            objGeneral.setAssign(Query);
                            }
                }
                
                if (activityName.equalsIgnoreCase("AEI")) {

                  if(filestatus.equalsIgnoreCase("File In Processing")){
                            Query = "select username from ng_user_details where roletype = 'Secretary'";
                            objGeneral.setAssign(Query);
                            }
                
                         if(filestatus.equalsIgnoreCase("Documents Not Completed")){
                              Query = "select username from ng_user_details where roletype = 'Clerk'";
                              objGeneral.setAssign(Query);
                            }
                }
                if (activityName.equalsIgnoreCase("Secretary")) {
                    Query = "select username from ng_user_details where roletype = 'Clerk'";
                    objGeneral.setAssign(Query);
               }

            }
        }


        if (pEvent.getType().name().equalsIgnoreCase("MOUSE_CLICKED")) {

            if (pEvent.getSource().getName().equalsIgnoreCase("btn_cghs_upload")) {
            }
        }
    }

    @Override
    public void formLoaded(FormEvent arg0) {
        // TODO Auto-generated method stub
        System.out.println(" -------------------Intiation Workstep Loaded from formloaded.----------------");
        // TODO Auto-generated method stub
        System.out.println("form Loaded called");
        formObject = FormContext.getCurrentInstance().getFormReference();
        formConfig = FormContext.getCurrentInstance().getFormConfig();
        System.out.println("formObject :" + formObject);
        System.out.println("formConfig :" + formConfig);
        try {

            activityName = formObject.getWFActivityName();
            System.out.println("#####################ActivityName##############################3" + activityName);
            //capturing system fields----starts
            engineName = formConfig.getConfigElement("EngineName");
            sessionId = formConfig.getConfigElement("DMSSessionId");
            folderId = formConfig.getConfigElement("FolderId");
            serverUrl = formConfig.getConfigElement("ServletPath");
            //ServletUrl = serverUrl + "/servlet/ExternalServlet";
            processInstanceId = formConfig.getConfigElement("ProcessInstanceId");
            workItemId = formConfig.getConfigElement("WorkitemId");
            userName = formConfig.getConfigElement("UserName");
            processDefId = formConfig.getConfigElement("ProcessDefId");
            System.out.println("ProcessInstanceId===== " + processInstanceId);
            System.out.println("Activityname=====" + activityName);
            System.out.println("CabinetName====" + engineName);
            System.out.println("sessionId====" + sessionId);
            System.out.println("Username====" + userName);
            System.out.println("workItemId====" + workItemId);



        } catch (Exception e) {
            System.out.println("Exception in FieldValueBagSet::::" + e.getMessage());
        }
    }

    @Override
    public void formPopulated(FormEvent arg0) {
        // TODO Auto-generated method stub
        try {
            objGeneral = new General();
            System.out.println("----------------------Intiation Workstep Loaded from form populated.---------------------------");
            formObject = FormContext.getCurrentInstance().getFormReference();
            formConfig = FormContext.getCurrentInstance().getFormConfig();


            //Code for File Status

            System.out.println("printing my activity name------->" + activityName);

            act = formObject.getNGValue("q_pstage");
            //System.out.println("Old Activity : " + activity + " Old Status : " +status);
            if (activityName.equalsIgnoreCase("StartEvent1")) {
                formObject.addItem("file_status", "File In Processing");
            }

            if (activityName.equalsIgnoreCase("Sr Clerk")) {
               
                if (act.equalsIgnoreCase("StartEvent1")){
                    formObject.addItem("file_status", "File In Processing");
                } 
                if (act.equalsIgnoreCase("Secretary")){
                    formObject.addItem("file_status", "Query Sent To Applicant");
                   
                }
            }


            if (activityName.equalsIgnoreCase("Assistant Officer")) {
                 //formObject.addItem("file_status", "File In Processing");
                 //formObject.addItem("file_status", "Documents Not Completed");
                 if (act.equalsIgnoreCase("Sr Clerk")){
                    formObject.addItem("file_status", "File In Processing");
                    formObject.addItem("file_status", "Documents Not Completed");
                } 
                if (act.equalsIgnoreCase("Secretary")){
                    formObject.addItem("file_status", "Query Sent To Applicant");
                    
                }
                
            }

            if (activityName.equalsIgnoreCase("AEI")) {
                formObject.addItem("file_status", "File In Processing");
                formObject.addItem("file_status", "Documents Not Completed");
            }

            if (activityName.equalsIgnoreCase("Secretary")) {
                formObject.addItem("file_status", "Approved");
                formObject.addItem("file_status", "Documents Not Completed");
                formObject.addItem("file_status", "Not Approved");
            }
                objGeneral.getDocIndex(processInstanceId , "exainternew");
                
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Exception in FieldValueBagSet::::" + e.getMessage());

        }
    }

    @Override
    public void saveFormCompleted(FormEvent arg0) throws ValidatorException {
        // TODO Auto-generated method stub
    }

    @Override
    public void saveFormStarted(FormEvent arg0) throws ValidatorException {
        // TODO Auto-generated method stub
        formObject = FormContext.getCurrentInstance().getFormReference();
        formConfig = FormContext.getCurrentInstance().getFormConfig();


    }

    @Override
    public void submitFormCompleted(FormEvent arg0) throws ValidatorException {
        // TODO Auto-generated method stub
        formObject = FormContext.getCurrentInstance().getFormReference();
        formConfig = FormContext.getCurrentInstance().getFormConfig();


    }

    @Override
    public void submitFormStarted(FormEvent arg0) throws ValidatorException {
        // TODO Auto-generated method stub
        formObject = FormContext.getCurrentInstance().getFormReference();
        formConfig = FormContext.getCurrentInstance().getFormConfig();
        System.out.print("-------------------submitform started---------");
       
        formObject.setNGValue("q_pstage", activityName);
        formObject.setNGValue("q_pstatus", filestatus);
        
    }

    @Override
    public void initialize() {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
